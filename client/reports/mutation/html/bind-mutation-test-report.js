document.querySelector('mutation-test-report-app').report = {"files":{"/Users/steve/learnvault/client/src/components/collections/LikeButton.jsx":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":4,"line":23},"start":{"column":45,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"0","location":{"end":{"column":2,"line":40},"start":{"column":53,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":53,"line":7},"start":{"column":21,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"3","location":{"end":{"column":40,"line":9},"start":{"column":11,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"5","location":{"end":{"column":20,"line":10},"start":{"column":15,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"12","location":{"end":{"column":8,"line":22},"start":{"column":25,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"13","location":{"end":{"column":31,"line":21},"start":{"column":23,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":6,"line":15},"start":{"column":42,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"7","location":{"end":{"column":23,"line":12},"start":{"column":9,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"15","location":{"end":{"column":67,"line":29},"start":{"column":21,"line":29}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"14","location":{"end":{"column":64,"line":28},"start":{"column":18,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"6","location":{"end":{"column":8,"line":13},"start":{"column":16,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"8","location":{"end":{"column":43,"line":12},"start":{"column":25,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"9","location":{"end":{"column":42,"line":16},"start":{"column":13,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"10","location":{"end":{"column":8,"line":19},"start":{"column":23,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"11","location":{"end":{"column":31,"line":18},"start":{"column":21,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React, { useState } from 'react';\n\nimport './LikeButton.css';\n\nconst LikeButton = ({ id, loggedInUser, likes }) => {\n  function likeButtonClick(eventId, userId) {\n    const payload = { id: userId, collectionId: id };\n\n    fetch(`/api/collections/like/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  return (\n    <>\n      <span\n        onClick={() => likeButtonClick(id, loggedInUser, likes)}\n        onKeyPress={() => likeButtonClick(id, loggedInUser, likes)}\n        type=\"button\"\n        className=\"button-like\"\n        role=\"button\"\n        tabIndex={0}\n      >\n        <i className=\"far fa-thumbs-up\" />\n        <small>{likes.length}</small>\n      </span>\n    </>\n  );\n};\n\nexport default LikeButton;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};