document.querySelector('mutation-test-report-app').report = {"files":{"/Users/steve/learnvault/client/src/App.jsx":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":2,"line":135},"start":{"column":19,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"1","location":{"end":{"column":54,"line":28},"start":{"column":52,"line":28}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"3","location":{"end":{"column":71,"line":30},"start":{"column":41,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":44,"line":29},"start":{"column":42,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"4","location":{"end":{"column":49,"line":31},"start":{"column":44,"line":31}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"5","location":{"end":{"column":7,"line":49},"start":{"column":5,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"6","location":{"end":{"column":6,"line":49},"start":{"column":26,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"7","location":{"end":{"column":8,"line":42},"start":{"column":18,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"8","location":{"end":{"column":10,"line":41},"start":{"column":20,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"9","location":{"end":{"column":12,"line":40},"start":{"column":25,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"11","location":{"end":{"column":50,"line":39},"start":{"column":41,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":27,"line":38},"start":{"column":20,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"13","location":{"end":{"column":8,"line":48},"start":{"column":16,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"12","location":{"end":{"column":62,"line":39},"start":{"column":53,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"14","location":{"end":{"column":32,"line":44},"start":{"column":26,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"15","location":{"end":{"column":42,"line":44},"start":{"column":35,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"17","location":{"end":{"column":37,"line":46},"start":{"column":28,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":10,"line":47},"start":{"column":18,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"18","location":{"end":{"column":49,"line":46},"start":{"column":40,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"19","location":{"end":{"column":15,"line":50},"start":{"column":5,"line":50}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"20","location":{"end":{"column":4,"line":83},"start":{"column":19,"line":53}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"21","location":{"end":{"column":28,"line":54},"start":{"column":11,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"22","location":{"end":{"column":8,"line":68},"start":{"column":22,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"23","location":{"end":{"column":31,"line":56},"start":{"column":13,"line":56}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"24","location":{"end":{"column":31,"line":56},"start":{"column":13,"line":56}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"25","location":{"end":{"column":31,"line":56},"start":{"column":13,"line":56}},"mutatorName":"EqualityOperator","replacement":"res.status !== 200","status":"Survived"},{"id":"28","location":{"end":{"column":45,"line":61},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"26","location":{"end":{"column":10,"line":58},"start":{"column":33,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"31","location":{"end":{"column":51,"line":60},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"30","location":{"end":{"column":51,"line":60},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"32","location":{"end":{"column":51,"line":60},"start":{"column":13,"line":60}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"33","location":{"end":{"column":51,"line":60},"start":{"column":38,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"35","location":{"end":{"column":45,"line":61},"start":{"column":14,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"34","location":{"end":{"column":45,"line":61},"start":{"column":14,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"37","location":{"end":{"column":45,"line":61},"start":{"column":39,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"36","location":{"end":{"column":45,"line":61},"start":{"column":14,"line":61}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"39","location":{"end":{"column":69,"line":63},"start":{"column":13,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"38","location":{"end":{"column":10,"line":67},"start":{"column":47,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"40","location":{"end":{"column":8,"line":75},"start":{"column":23,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":45,"line":71},"start":{"column":13,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"42","location":{"end":{"column":45,"line":71},"start":{"column":13,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"43","location":{"end":{"column":45,"line":71},"start":{"column":13,"line":70}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"44","location":{"end":{"column":51,"line":70},"start":{"column":13,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"45","location":{"end":{"column":51,"line":70},"start":{"column":13,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"46","location":{"end":{"column":51,"line":70},"start":{"column":13,"line":70}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"47","location":{"end":{"column":51,"line":70},"start":{"column":38,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"48","location":{"end":{"column":45,"line":71},"start":{"column":14,"line":71}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"49","location":{"end":{"column":45,"line":71},"start":{"column":14,"line":71}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"51","location":{"end":{"column":45,"line":71},"start":{"column":39,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"50","location":{"end":{"column":45,"line":71},"start":{"column":14,"line":71}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"27","location":{"end":{"column":45,"line":61},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"53","location":{"end":{"column":55,"line":72},"start":{"column":23,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"52","location":{"end":{"column":10,"line":73},"start":{"column":47,"line":71}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":43,"line":78},"start":{"column":13,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"54","location":{"end":{"column":8,"line":82},"start":{"column":23,"line":76}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"56","location":{"end":{"column":43,"line":78},"start":{"column":13,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"57","location":{"end":{"column":43,"line":78},"start":{"column":13,"line":77}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"29","location":{"end":{"column":45,"line":61},"start":{"column":13,"line":60}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"59","location":{"end":{"column":51,"line":77},"start":{"column":13,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"58","location":{"end":{"column":51,"line":77},"start":{"column":13,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"60","location":{"end":{"column":51,"line":77},"start":{"column":13,"line":77}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"62","location":{"end":{"column":43,"line":78},"start":{"column":12,"line":78}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"61","location":{"end":{"column":51,"line":77},"start":{"column":38,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"63","location":{"end":{"column":43,"line":78},"start":{"column":12,"line":78}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"64","location":{"end":{"column":43,"line":78},"start":{"column":12,"line":78}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"65","location":{"end":{"column":43,"line":78},"start":{"column":37,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"66","location":{"end":{"column":10,"line":80},"start":{"column":45,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"67","location":{"end":{"column":68,"line":79},"start":{"column":25,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"68","location":{"end":{"column":27,"line":81},"start":{"column":25,"line":81}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"69","location":{"end":{"column":8,"line":83},"start":{"column":6,"line":83}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n} from 'react-router-dom';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport PageNotFound from './components/PageNotFound';\nimport WithAuth from './components/WithAuth';\n\nimport AllCollections from './components/collections/AllCollections';\nimport ExpandedCollection from './components/collections/ExpandedCollection';\nimport SavedCollections from './components/collections/SavedCollections';\nimport AddCollection from './components/collections/AddCollection';\n\nimport './App.css';\n\nconst App = () => {\n  const [loggedInUser, setLoggedInUser] = useState('');\n  const [timerId, setTimerId] = useState('');\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [darkMode, setDarkMode] = useState(false);\n\n  const theme = React.useMemo(\n    () => createMuiTheme({\n      overrides: {\n        MuiAppBar: {\n          colorDefault: {\n            color: 'white',\n            backgroundColor: darkMode ? '#424242' : '#1976d2',\n          },\n        },\n      },\n      palette: {\n        type: darkMode ? 'dark' : 'light',\n        primary: {\n          main: darkMode ? '#90caf9' : '#1976d2',\n        },\n      },\n    }),\n    [darkMode],\n  );\n\n  useEffect(() => {\n    fetch('/api/checkToken')\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        const error = new Error(res.statusText);\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.error(\n            'Error: fetch /api/checkToken did not return status 200',\n            error,\n          );\n          throw error;\n        }\n      })\n      .then((data) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log('Success: fetch /api/checkToken', data);\n        }\n        setLoggedInUser(data);\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === 'development'\n        || process.env.NODE_ENV === 'test') {\n          console.error('Error: fetch /api/checkToken caught error', err);\n        }\n        setLoggedInUser('');\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Nav loggedInUser={loggedInUser} setLoggedInUser={setLoggedInUser} timerId={timerId} setTimerId={setTimerId} setDarkMode={setDarkMode} darkMode={darkMode} />\n        <main className=\"main\">\n          <Switch>\n            <Route path=\"/register\">\n              <Register setLoggedInUser={setLoggedInUser} />\n            </Route>\n\n            <Route path=\"/login\">\n              <Login setLoggedInUser={setLoggedInUser} setTimerId={setTimerId} timerId={timerId} />\n            </Route>\n\n            <Route path=\"/profile\">\n              {/* To protect a route, simply wrap it with a WithAuth component */}\n              <WithAuth setLoggedInUser={setLoggedInUser} Component={Profile} loggedInUser={loggedInUser} />\n            </Route>\n\n            <Route path=\"/collections/user/:userId\">\n              <AllCollections userCollections loggedInUser={loggedInUser} />\n            </Route>\n\n            <Route path=\"/collections/:id\">\n              <ExpandedCollection loggedInUser={loggedInUser} />\n            </Route>\n\n            <Route path=\"/savedcollections\">\n              <WithAuth setLoggedInUser={setLoggedInUser} Component={SavedCollections} loggedInUser={loggedInUser} />\n            </Route>\n\n            <Route path=\"/addcollection\">\n              {/* <AddCollection loggedInUser={loggedInUser} /> */}\n              <WithAuth setLoggedInUser={setLoggedInUser} Component={AddCollection} loggedInUser={loggedInUser} />\n            </Route>\n\n            <Route path=\"/\" exact>\n              <AllCollections loggedInUser={loggedInUser} />\n            </Route>\n\n            <Route path=\"/\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    </ThemeProvider>\n\n  );\n};\n\nexport default App;\n"},"/Users/steve/learnvault/client/src/components/Login.jsx":{"language":"javascript","mutants":[{"id":"70","location":{"end":{"column":3,"line":23},"start":{"column":30,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"71","location":{"end":{"column":2,"line":23},"start":{"column":42,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":20,"line":11},"start":{"column":14,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"72","location":{"end":{"column":4,"line":13},"start":{"column":9,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"74","location":{"end":{"column":21,"line":12},"start":{"column":15,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"75","location":{"end":{"column":4,"line":16},"start":{"column":11,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"76","location":{"end":{"column":4,"line":19},"start":{"column":17,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"77","location":{"end":{"column":4,"line":22},"start":{"column":14,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"81","location":{"end":{"column":4,"line":34},"start":{"column":44,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"80","location":{"end":{"column":40,"line":27},"start":{"column":38,"line":27}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"78","location":{"end":{"column":18,"line":21},"start":{"column":12,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"82","location":{"end":{"column":15,"line":29},"start":{"column":13,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"79","location":{"end":{"column":2,"line":117},"start":{"column":61,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"85","location":{"end":{"column":20,"line":32},"start":{"column":18,"line":32}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"83","location":{"end":{"column":17,"line":30},"start":{"column":15,"line":30}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"84","location":{"end":{"column":15,"line":31},"start":{"column":13,"line":31}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"86","location":{"end":{"column":24,"line":33},"start":{"column":19,"line":33}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"87","location":{"end":{"column":4,"line":67},"start":{"column":24,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"88","location":{"end":{"column":37,"line":40},"start":{"column":9,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"91","location":{"end":{"column":15,"line":40},"start":{"column":9,"line":40}},"mutatorName":"BooleanLiteral","replacement":"email","status":"Survived"},{"id":"89","location":{"end":{"column":37,"line":40},"start":{"column":9,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"90","location":{"end":{"column":37,"line":40},"start":{"column":9,"line":40}},"mutatorName":"LogicalOperator","replacement":"!email && !password.password","status":"Survived"},{"id":"92","location":{"end":{"column":37,"line":40},"start":{"column":19,"line":40}},"mutatorName":"BooleanLiteral","replacement":"password.password","status":"Survived"},{"id":"93","location":{"end":{"column":23,"line":42},"start":{"column":11,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"95","location":{"end":{"column":21,"line":43},"start":{"column":15,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"94","location":{"end":{"column":6,"line":48},"start":{"column":25,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"96","location":{"end":{"column":8,"line":46},"start":{"column":16,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":66,"line":47},"start":{"column":28,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"98","location":{"end":{"column":43,"line":45},"start":{"column":25,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"97","location":{"end":{"column":23,"line":45},"start":{"column":9,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"100","location":{"end":{"column":42,"line":49},"start":{"column":13,"line":49}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"105","location":{"end":{"column":39,"line":52},"start":{"column":30,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"103","location":{"end":{"column":39,"line":52},"start":{"column":13,"line":52}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"104","location":{"end":{"column":39,"line":52},"start":{"column":13,"line":52}},"mutatorName":"EqualityOperator","replacement":"data.attempt !== 'success'","status":"Survived"},{"id":"106","location":{"end":{"column":10,"line":61},"start":{"column":41,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"108","location":{"end":{"column":31,"line":55},"start":{"column":29,"line":55}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"107","location":{"end":{"column":12,"line":57},"start":{"column":47,"line":54}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"110","location":{"end":{"column":27,"line":60},"start":{"column":24,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"109","location":{"end":{"column":34,"line":56},"start":{"column":26,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"112","location":{"end":{"column":39,"line":65},"start":{"column":21,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"113","location":{"end":{"column":4,"line":71},"start":{"column":24,"line":69}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"111","location":{"end":{"column":8,"line":66},"start":{"column":23,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"114","location":{"end":{"column":4,"line":71},"start":{"column":45,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"115","location":{"end":{"column":60,"line":70},"start":{"column":17,"line":70}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"116","location":{"end":{"column":4,"line":75},"start":{"column":41,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"117","location":{"end":{"column":70,"line":74},"start":{"column":17,"line":74}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"119","location":{"end":{"column":4,"line":79},"start":{"column":46,"line":77}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":68,"line":74},"start":{"column":46,"line":74}},"mutatorName":"BooleanLiteral","replacement":"password.showPassword","status":"Survived"},{"id":"120","location":{"end":{"column":119,"line":86},"start":{"column":88,"line":86}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"122","location":{"end":{"column":62,"line":94},"start":{"column":52,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"121","location":{"end":{"column":49,"line":94},"start":{"column":43,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"123","location":{"end":{"column":46,"line":96},"start":{"column":36,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"101","location":{"end":{"column":8,"line":62},"start":{"column":23,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"102","location":{"end":{"column":39,"line":52},"start":{"column":13,"line":52}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"}],"source":"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  TextField, Button, InputLabel, InputAdornment, IconButton, OutlinedInput, FormControl, makeStyles,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '40ch',\n  },\n}));\n\nconst Login = ({ setLoggedInUser, setTimerId, timerId }) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n  const history = useHistory();\n\n  const login = (e) => {\n    e.preventDefault();\n\n    if (!email || !password.password) return;\n\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password: password.password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If login was successful, redirect to homepage\n        if (data.attempt === 'success') {\n          clearTimeout(timerId);\n          const newTimerId = setTimeout(() => {\n            setLoggedInUser('');\n            history.push('/login');\n          }, 3600000);\n          setTimerId(newTimerId);\n          setLoggedInUser(data.userId);\n          history.push('/');\n        }\n      })\n      .catch((err) => {\n        // TODO: handle error if fetch attempt fails\n        console.log('Error on login: ', err);\n      });\n  };\n\n  const handleChange = (prop) => (event) => {\n    setPassword({ ...password, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setPassword({ ...password, showPassword: !password.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"login\">\n      <h1>Login</h1>\n      <form>\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n          <TextField id=\"outlined-required\" label=\"Email\" variant=\"outlined\" onChange={(e) => setEmail(e.target.value)} value={email} />\n        </FormControl>\n        {/* </label> */}\n        <br />\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={password.showPassword ? 'text' : 'password'}\n            value={password.password}\n            onChange={handleChange('password')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {password.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n              )}\n            labelWidth={70}\n          />\n        </FormControl>\n        <br />\n        <Button onClick={login} variant=\"contained\" color=\"primary\">Login</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"},"/Users/steve/learnvault/client/src/components/Nav.jsx":{"language":"javascript","mutants":[{"id":"124","location":{"end":{"column":3,"line":43},"start":{"column":30,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"127","location":{"end":{"column":20,"line":22},"start":{"column":14,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"126","location":{"end":{"column":4,"line":24},"start":{"column":9,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"125","location":{"end":{"column":2,"line":43},"start":{"column":42,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"128","location":{"end":{"column":36,"line":23},"start":{"column":21,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"129","location":{"end":{"column":4,"line":28},"start":{"column":9,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"131","location":{"end":{"column":25,"line":27},"start":{"column":17,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"130","location":{"end":{"column":20,"line":26},"start":{"column":14,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"137","location":{"end":{"column":23,"line":41},"start":{"column":13,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"136","location":{"end":{"column":4,"line":42},"start":{"column":9,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"138","location":{"end":{"column":2,"line":194},"start":{"column":7,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"139","location":{"end":{"column":4,"line":77},"start":{"column":24,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"140","location":{"end":{"column":24,"line":57},"start":{"column":11,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"141","location":{"end":{"column":42,"line":58},"start":{"column":13,"line":58}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"132","location":{"end":{"column":4,"line":32},"start":{"column":10,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"133","location":{"end":{"column":20,"line":30},"start":{"column":14,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"143","location":{"end":{"column":45,"line":61},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"142","location":{"end":{"column":8,"line":65},"start":{"column":23,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"145","location":{"end":{"column":45,"line":61},"start":{"column":13,"line":60}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"147","location":{"end":{"column":51,"line":60},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"144","location":{"end":{"column":45,"line":61},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"146","location":{"end":{"column":51,"line":60},"start":{"column":13,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"134","location":{"end":{"column":25,"line":31},"start":{"column":17,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"135","location":{"end":{"column":4,"line":35},"start":{"column":15,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"148","location":{"end":{"column":51,"line":60},"start":{"column":13,"line":60}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"149","location":{"end":{"column":51,"line":60},"start":{"column":38,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"150","location":{"end":{"column":45,"line":61},"start":{"column":14,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"151","location":{"end":{"column":45,"line":61},"start":{"column":14,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"152","location":{"end":{"column":45,"line":61},"start":{"column":14,"line":61}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"154","location":{"end":{"column":10,"line":63},"start":{"column":47,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"153","location":{"end":{"column":45,"line":61},"start":{"column":39,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"156","location":{"end":{"column":8,"line":72},"start":{"column":23,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"155","location":{"end":{"column":46,"line":62},"start":{"column":23,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"157","location":{"end":{"column":45,"line":68},"start":{"column":13,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"158","location":{"end":{"column":45,"line":68},"start":{"column":13,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"160","location":{"end":{"column":51,"line":67},"start":{"column":13,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"159","location":{"end":{"column":45,"line":68},"start":{"column":13,"line":67}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"161","location":{"end":{"column":51,"line":67},"start":{"column":13,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"162","location":{"end":{"column":51,"line":67},"start":{"column":13,"line":67}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"163","location":{"end":{"column":51,"line":67},"start":{"column":38,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"165","location":{"end":{"column":45,"line":68},"start":{"column":14,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"164","location":{"end":{"column":45,"line":68},"start":{"column":14,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"166","location":{"end":{"column":45,"line":68},"start":{"column":14,"line":68}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"167","location":{"end":{"column":45,"line":68},"start":{"column":39,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"168","location":{"end":{"column":10,"line":70},"start":{"column":47,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"169","location":{"end":{"column":44,"line":69},"start":{"column":23,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"171","location":{"end":{"column":23,"line":75},"start":{"column":21,"line":75}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"170","location":{"end":{"column":18,"line":74},"start":{"column":16,"line":74}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"172","location":{"end":{"column":21,"line":76},"start":{"column":18,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"173","location":{"end":{"column":12,"line":131},"start":{"column":12,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"174","location":{"end":{"column":12,"line":131},"start":{"column":12,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"175","location":{"end":{"column":12,"line":131},"start":{"column":12,"line":108}},"mutatorName":"LogicalOperator","replacement":"!loggedInUser || <>\n            <Link component={RouterLink} to=\"/login\" color=\"inherit\" className={classes.link} variant=\"h6\" id=\"nav-login\">\n              Login\n            </Link>\n            <Link component={RouterLink} to=\"/register\" color=\"inherit\" className={classes.link} variant=\"h6\" id=\"nav-register\">\n              Register\n            </Link>\n          </>","status":"Killed"},{"id":"176","location":{"end":{"column":25,"line":108},"start":{"column":12,"line":108}},"mutatorName":"BooleanLiteral","replacement":"loggedInUser","status":"Killed"},{"id":"178","location":{"end":{"column":12,"line":185},"start":{"column":12,"line":132}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"179","location":{"end":{"column":12,"line":185},"start":{"column":12,"line":132}},"mutatorName":"LogicalOperator","replacement":"loggedInUser || <>\n            <Link component={RouterLink} to=\"/addcollection\" color=\"inherit\" className={classes.link} variant=\"h6\" id=\"nav-addcollection\">\n              Add Collection\n            </Link>\n            <Link component={RouterLink} to={`/collections/user/${loggedInUser}`} color=\"inherit\" className={classes.link} variant=\"h6\" id=\"nav-mycollections\">\n              My Collections\n            </Link>\n            <Link component={RouterLink} to=\"/savedcollections\" color=\"inherit\" className={classes.link} variant=\"h6\" id=\"nav-savedcollections\">\n              Saved Collections\n            </Link>\n            <Link component={RouterLink} to=\"/profile\" id=\"nav-profile\" color=\"inherit\" className={classes.link} variant=\"h6\">\n              Profile\n            </Link>\n            <Link href=\"#logout\" onClick={logout} color=\"inherit\" className={classes.link} variant=\"h6\" id=\"nav-logout\">\n              Logout\n            </Link>\n          </>","status":"Killed"},{"id":"177","location":{"end":{"column":12,"line":185},"start":{"column":12,"line":132}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"180","location":{"end":{"column":54,"line":146},"start":{"column":19,"line":146}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"181","location":{"end":{"column":101,"line":186},"start":{"column":73,"line":186}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"183","location":{"end":{"column":72,"line":187},"start":{"column":14,"line":187}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"182","location":{"end":{"column":100,"line":186},"start":{"column":91,"line":186}},"mutatorName":"BooleanLiteral","replacement":"darkMode","status":"Survived"},{"id":"184","location":{"end":{"column":72,"line":187},"start":{"column":14,"line":187}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"185","location":{"end":{"column":72,"line":187},"start":{"column":14,"line":187}},"mutatorName":"LogicalOperator","replacement":"darkMode || <Brightness7Icon style={{\n  color: 'white'\n}} />","status":"Survived"},{"id":"187","location":{"end":{"column":66,"line":187},"start":{"column":59,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"186","location":{"end":{"column":68,"line":187},"start":{"column":50,"line":187}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"188","location":{"end":{"column":73,"line":188},"start":{"column":14,"line":188}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"189","location":{"end":{"column":73,"line":188},"start":{"column":14,"line":188}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"191","location":{"end":{"column":23,"line":188},"start":{"column":14,"line":188}},"mutatorName":"BooleanLiteral","replacement":"darkMode","status":"Survived"},{"id":"192","location":{"end":{"column":69,"line":188},"start":{"column":51,"line":188}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"190","location":{"end":{"column":73,"line":188},"start":{"column":14,"line":188}},"mutatorName":"LogicalOperator","replacement":"!darkMode || <Brightness4Icon style={{\n  color: 'white'\n}} />","status":"Survived"},{"id":"193","location":{"end":{"column":67,"line":188},"start":{"column":60,"line":188}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport { Button, Link } from '@material-ui/core';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport {\n  Link as RouterLink,\n  useHistory,\n  BrowserRouter,\n} from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// import './Nav.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  left: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  right: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n  },\n  links: {\n  },\n  link: {\n    margin: '0px 10px',\n  },\n}));\n\nconst Nav = ({\n  loggedInUser,\n  setLoggedInUser,\n  timerId,\n  setTimerId,\n  setDarkMode,\n  darkMode,\n}) => {\n  const history = useHistory();\n\n  const logout = () => {\n    // console.log('logging out');\n    fetch('/api/logout')\n      .then((response) => response.json())\n      .then((data) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log('Success /api/logout: ', data);\n        }\n        return data;\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log('Error /api/logout: ', err);\n        }\n        // throw error\n      });\n    clearTimeout(timerId);\n    setTimerId('');\n    setLoggedInUser('');\n    history.push('/');\n  };\n\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" color=\"default\">\n      <Toolbar className={classes.root}>\n        <div className={classes.left}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            LearnVault\n          </Typography>\n        </div>\n        <div className={classes.right}>\n          <Link\n            component={RouterLink}\n            to=\"/\"\n            color=\"inherit\"\n            className={classes.link}\n            variant=\"h6\"\n            id=\"nav-home\"\n          >\n            Home\n          </Link>\n          {!loggedInUser && (\n          <>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n              id=\"nav-login\"\n            >\n              Login\n            </Link>\n            <Link\n              component={RouterLink}\n              to=\"/register\"\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n              id=\"nav-register\"\n            >\n              Register\n            </Link>\n          </>\n          )}\n          {loggedInUser && (\n          <>\n            <Link\n              component={RouterLink}\n              to=\"/addcollection\"\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n              id=\"nav-addcollection\"\n            >\n              Add Collection\n            </Link>\n            <Link\n              component={RouterLink}\n              to={`/collections/user/${loggedInUser}`}\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n              id=\"nav-mycollections\"\n            >\n              My Collections\n            </Link>\n            <Link\n              component={RouterLink}\n              to=\"/savedcollections\"\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n              id=\"nav-savedcollections\"\n            >\n              Saved Collections\n            </Link>\n            <Link\n              component={RouterLink}\n              to=\"/profile\"\n              id=\"nav-profile\"\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n            >\n              Profile\n            </Link>\n            <Link\n              href=\"#logout\"\n              onClick={logout}\n              color=\"inherit\"\n              className={classes.link}\n              variant=\"h6\"\n              id=\"nav-logout\"\n            >\n              Logout\n            </Link>\n          </>\n          )}\n          <Button aria-label=\"toggle dark mode\" variant=\"text\" onClick={() => setDarkMode(!darkMode)}>\n            {darkMode && <Brightness7Icon style={{ color: 'white' }} />}\n            {!darkMode && <Brightness4Icon style={{ color: 'white' }} />}\n          </Button>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Nav;\n"},"/Users/steve/learnvault/client/src/components/Profile.jsx":{"language":"javascript","mutants":[{"id":"195","location":{"end":{"column":5,"line":11},"start":{"column":20,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"196","location":{"end":{"column":2,"line":24},"start":{"column":20,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"197","location":{"end":{"column":26,"line":15},"start":{"column":6,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"198","location":{"end":{"column":26,"line":15},"start":{"column":6,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"199","location":{"end":{"column":26,"line":15},"start":{"column":6,"line":15}},"mutatorName":"EqualityOperator","replacement":"data.likesTitle == ''","status":"Survived"},{"id":"201","location":{"end":{"column":25,"line":16},"start":{"column":6,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"200","location":{"end":{"column":26,"line":15},"start":{"column":24,"line":15}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"203","location":{"end":{"column":25,"line":16},"start":{"column":6,"line":16}},"mutatorName":"EqualityOperator","replacement":"data.likesText == ''","status":"Survived"},{"id":"204","location":{"end":{"column":25,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"202","location":{"end":{"column":25,"line":16},"start":{"column":6,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"205","location":{"end":{"column":27,"line":17},"start":{"column":6,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"206","location":{"end":{"column":27,"line":17},"start":{"column":6,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"207","location":{"end":{"column":27,"line":17},"start":{"column":6,"line":17}},"mutatorName":"EqualityOperator","replacement":"data.likesAuthor == ''","status":"Survived"},{"id":"208","location":{"end":{"column":27,"line":17},"start":{"column":25,"line":17}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"209","location":{"end":{"column":24,"line":18},"start":{"column":6,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"210","location":{"end":{"column":24,"line":18},"start":{"column":6,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"211","location":{"end":{"column":24,"line":18},"start":{"column":6,"line":18}},"mutatorName":"EqualityOperator","replacement":"data.category == ''","status":"Survived"},{"id":"212","location":{"end":{"column":24,"line":18},"start":{"column":22,"line":18}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"214","location":{"end":{"column":20,"line":19},"start":{"column":6,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"213","location":{"end":{"column":20,"line":19},"start":{"column":6,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"215","location":{"end":{"column":20,"line":19},"start":{"column":6,"line":19}},"mutatorName":"EqualityOperator","replacement":"data.tags == ''","status":"Survived"},{"id":"217","location":{"end":{"column":31,"line":20},"start":{"column":7,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"216","location":{"end":{"column":20,"line":19},"start":{"column":18,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"218","location":{"end":{"column":31,"line":20},"start":{"column":7,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"220","location":{"end":{"column":31,"line":20},"start":{"column":29,"line":20}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"219","location":{"end":{"column":31,"line":20},"start":{"column":7,"line":20}},"mutatorName":"EqualityOperator","replacement":"String(data.links) == ''","status":"Survived"},{"id":"221","location":{"end":{"column":179,"line":20},"start":{"column":90,"line":20}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"222","location":{"end":{"column":2,"line":76},"start":{"column":28,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"223","location":{"end":{"column":4,"line":34},"start":{"column":19,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"224","location":{"end":{"column":66,"line":28},"start":{"column":43,"line":28}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"225","location":{"end":{"column":76,"line":28},"start":{"column":73,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"227","location":{"end":{"column":17,"line":29},"start":{"column":15,"line":29}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"226","location":{"end":{"column":88,"line":28},"start":{"column":85,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"230","location":{"end":{"column":33,"line":30},"start":{"column":20,"line":30}},"mutatorName":"EqualityOperator","replacement":"i >= tags.length","status":"Survived"},{"id":"228","location":{"end":{"column":33,"line":30},"start":{"column":20,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"231","location":{"end":{"column":37,"line":30},"start":{"column":34,"line":30}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"229","location":{"end":{"column":33,"line":30},"start":{"column":20,"line":30}},"mutatorName":"EqualityOperator","replacement":"i <= tags.length","status":"Survived"},{"id":"234","location":{"end":{"column":57,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"232","location":{"end":{"column":8,"line":32},"start":{"column":38,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"236","location":{"end":{"column":27,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"233","location":{"end":{"column":57,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"235","location":{"end":{"column":57,"line":31},"start":{"column":14,"line":31}},"mutatorName":"LogicalOperator","replacement":"tags[i] !== '' || cache.indexOf(tags[i]) == -1","status":"Survived"},{"id":"238","location":{"end":{"column":27,"line":31},"start":{"column":14,"line":31}},"mutatorName":"EqualityOperator","replacement":"tags[i] === ''","status":"Survived"},{"id":"237","location":{"end":{"column":27,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"239","location":{"end":{"column":27,"line":31},"start":{"column":25,"line":31}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"241","location":{"end":{"column":57,"line":31},"start":{"column":31,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"242","location":{"end":{"column":57,"line":31},"start":{"column":31,"line":31}},"mutatorName":"EqualityOperator","replacement":"cache.indexOf(tags[i]) != -1","status":"Survived"},{"id":"243","location":{"end":{"column":57,"line":31},"start":{"column":55,"line":31}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"240","location":{"end":{"column":57,"line":31},"start":{"column":31,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"244","location":{"end":{"column":79,"line":31},"start":{"column":66,"line":31}},"mutatorName":"ArithmeticOperator","replacement":"[tags[i]] - ' '","status":"Survived"},{"id":"246","location":{"end":{"column":79,"line":31},"start":{"column":76,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"245","location":{"end":{"column":75,"line":31},"start":{"column":66,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"247","location":{"end":{"column":4,"line":43},"start":{"column":18,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"251","location":{"end":{"column":17,"line":38},"start":{"column":15,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"248","location":{"end":{"column":69,"line":37},"start":{"column":42,"line":37}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"250","location":{"end":{"column":91,"line":37},"start":{"column":88,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"249","location":{"end":{"column":79,"line":37},"start":{"column":76,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"253","location":{"end":{"column":30,"line":39},"start":{"column":18,"line":39}},"mutatorName":"EqualityOperator","replacement":"i <= cat.length","status":"Survived"},{"id":"252","location":{"end":{"column":30,"line":39},"start":{"column":18,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"256","location":{"end":{"column":6,"line":41},"start":{"column":35,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"258","location":{"end":{"column":53,"line":40},"start":{"column":12,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"254","location":{"end":{"column":30,"line":39},"start":{"column":18,"line":39}},"mutatorName":"EqualityOperator","replacement":"i >= cat.length","status":"Survived"},{"id":"257","location":{"end":{"column":53,"line":40},"start":{"column":12,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"260","location":{"end":{"column":24,"line":40},"start":{"column":12,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"262","location":{"end":{"column":24,"line":40},"start":{"column":12,"line":40}},"mutatorName":"EqualityOperator","replacement":"cat[i] === ''","status":"Survived"},{"id":"259","location":{"end":{"column":53,"line":40},"start":{"column":12,"line":40}},"mutatorName":"LogicalOperator","replacement":"cat[i] !== '' || cache.indexOf(cat[i]) == -1","status":"Survived"},{"id":"255","location":{"end":{"column":34,"line":39},"start":{"column":31,"line":39}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"263","location":{"end":{"column":24,"line":40},"start":{"column":22,"line":40}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"266","location":{"end":{"column":53,"line":40},"start":{"column":28,"line":40}},"mutatorName":"EqualityOperator","replacement":"cache.indexOf(cat[i]) != -1","status":"Survived"},{"id":"261","location":{"end":{"column":24,"line":40},"start":{"column":12,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"265","location":{"end":{"column":53,"line":40},"start":{"column":28,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"264","location":{"end":{"column":53,"line":40},"start":{"column":28,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"268","location":{"end":{"column":74,"line":40},"start":{"column":62,"line":40}},"mutatorName":"ArithmeticOperator","replacement":"[cat[i]] - ' '","status":"Survived"},{"id":"267","location":{"end":{"column":53,"line":40},"start":{"column":51,"line":40}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"270","location":{"end":{"column":74,"line":40},"start":{"column":71,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"269","location":{"end":{"column":70,"line":40},"start":{"column":62,"line":40}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"272","location":{"end":{"column":71,"line":46},"start":{"column":42,"line":46}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"271","location":{"end":{"column":4,"line":52},"start":{"column":21,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"273","location":{"end":{"column":81,"line":46},"start":{"column":78,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"274","location":{"end":{"column":93,"line":46},"start":{"column":90,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"278","location":{"end":{"column":30,"line":48},"start":{"column":18,"line":48}},"mutatorName":"EqualityOperator","replacement":"i >= cat.length","status":"Survived"},{"id":"279","location":{"end":{"column":34,"line":48},"start":{"column":31,"line":48}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"276","location":{"end":{"column":30,"line":48},"start":{"column":18,"line":48}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"275","location":{"end":{"column":17,"line":47},"start":{"column":15,"line":47}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"277","location":{"end":{"column":30,"line":48},"start":{"column":18,"line":48}},"mutatorName":"EqualityOperator","replacement":"i <= cat.length","status":"Survived"},{"id":"280","location":{"end":{"column":6,"line":50},"start":{"column":35,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"283","location":{"end":{"column":53,"line":49},"start":{"column":12,"line":49}},"mutatorName":"LogicalOperator","replacement":"cat[i] !== '' || cache.indexOf(cat[i]) == -1","status":"Survived"},{"id":"281","location":{"end":{"column":53,"line":49},"start":{"column":12,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"285","location":{"end":{"column":24,"line":49},"start":{"column":12,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"284","location":{"end":{"column":24,"line":49},"start":{"column":12,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"282","location":{"end":{"column":53,"line":49},"start":{"column":12,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"286","location":{"end":{"column":24,"line":49},"start":{"column":12,"line":49}},"mutatorName":"EqualityOperator","replacement":"cat[i] === ''","status":"Survived"},{"id":"287","location":{"end":{"column":24,"line":49},"start":{"column":22,"line":49}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"288","location":{"end":{"column":53,"line":49},"start":{"column":28,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"290","location":{"end":{"column":53,"line":49},"start":{"column":28,"line":49}},"mutatorName":"EqualityOperator","replacement":"cache.indexOf(cat[i]) != -1","status":"Survived"},{"id":"289","location":{"end":{"column":53,"line":49},"start":{"column":28,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"291","location":{"end":{"column":53,"line":49},"start":{"column":51,"line":49}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"292","location":{"end":{"column":78,"line":49},"start":{"column":62,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"294","location":{"end":{"column":114,"line":58},"start":{"column":12,"line":58}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"293","location":{"end":{"column":73,"line":49},"start":{"column":65,"line":49}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"295","location":{"end":{"column":22,"line":58},"start":{"column":13,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"299","location":{"end":{"column":62,"line":58},"start":{"column":53,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"297","location":{"end":{"column":42,"line":58},"start":{"column":33,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"298","location":{"end":{"column":52,"line":58},"start":{"column":43,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"296","location":{"end":{"column":32,"line":58},"start":{"column":23,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"300","location":{"end":{"column":73,"line":58},"start":{"column":64,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"301","location":{"end":{"column":83,"line":58},"start":{"column":74,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"302","location":{"end":{"column":93,"line":58},"start":{"column":84,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"304","location":{"end":{"column":113,"line":58},"start":{"column":104,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"305","location":{"end":{"column":60,"line":66},"start":{"column":34,"line":66}},"mutatorName":"ArithmeticOperator","replacement":"Object.keys(data).length + 1","status":"Survived"},{"id":"306","location":{"end":{"column":74,"line":67},"start":{"column":71,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"303","location":{"end":{"column":103,"line":58},"start":{"column":94,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"307","location":{"end":{"column":237,"line":67},"start":{"column":80,"line":67}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"308","location":{"end":{"column":102,"line":67},"start":{"column":89,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"309","location":{"end":{"column":102,"line":67},"start":{"column":89,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"310","location":{"end":{"column":102,"line":67},"start":{"column":89,"line":67}},"mutatorName":"EqualityOperator","replacement":"String(e) == ''","status":"Survived"},{"id":"313","location":{"end":{"column":195,"line":67},"start":{"column":169,"line":67}},"mutatorName":"ArithmeticOperator","replacement":"Math.random() / color.length","status":"Survived"},{"id":"314","location":{"end":{"column":220,"line":67},"start":{"column":205,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"312","location":{"end":{"column":198,"line":67},"start":{"column":134,"line":67}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"317","location":{"end":{"column":231,"line":68},"start":{"column":75,"line":68}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"311","location":{"end":{"column":102,"line":67},"start":{"column":100,"line":67}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"315","location":{"end":{"column":236,"line":67},"start":{"column":234,"line":67}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"316","location":{"end":{"column":69,"line":68},"start":{"column":66,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"318","location":{"end":{"column":97,"line":68},"start":{"column":84,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"320","location":{"end":{"column":97,"line":68},"start":{"column":84,"line":68}},"mutatorName":"EqualityOperator","replacement":"String(e) == ''","status":"Survived"},{"id":"323","location":{"end":{"column":190,"line":68},"start":{"column":164,"line":68}},"mutatorName":"ArithmeticOperator","replacement":"Math.random() / color.length","status":"Survived"},{"id":"325","location":{"end":{"column":230,"line":68},"start":{"column":228,"line":68}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"327","location":{"end":{"column":183,"line":71},"start":{"column":67,"line":71}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"319","location":{"end":{"column":97,"line":68},"start":{"column":84,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"321","location":{"end":{"column":97,"line":68},"start":{"column":95,"line":68}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"324","location":{"end":{"column":214,"line":68},"start":{"column":200,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"322","location":{"end":{"column":193,"line":68},"start":{"column":129,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"333","location":{"end":{"column":2,"line":84},"start":{"column":32,"line":81}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"334","location":{"end":{"column":14,"line":82},"start":{"column":12,"line":82}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"332","location":{"end":{"column":24,"line":80},"start":{"column":15,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"335","location":{"end":{"column":11,"line":83},"start":{"column":9,"line":83}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"326","location":{"end":{"column":61,"line":71},"start":{"column":57,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"336","location":{"end":{"column":3,"line":95},"start":{"column":34,"line":85}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"340","location":{"end":{"column":17,"line":89},"start":{"column":15,"line":89}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"342","location":{"end":{"column":10,"line":91},"start":{"column":8,"line":91}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"338","location":{"end":{"column":16,"line":87},"start":{"column":14,"line":87}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"344","location":{"end":{"column":10,"line":93},"start":{"column":8,"line":93}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"328","location":{"end":{"column":100,"line":71},"start":{"column":84,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"329","location":{"end":{"column":173,"line":71},"start":{"column":109,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"330","location":{"end":{"column":170,"line":71},"start":{"column":144,"line":71}},"mutatorName":"ArithmeticOperator","replacement":"Math.random() / color.length","status":"Survived"},{"id":"331","location":{"end":{"column":2,"line":154},"start":{"column":40,"line":79}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"337","location":{"end":{"column":2,"line":95},"start":{"column":35,"line":85}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"343","location":{"end":{"column":14,"line":92},"start":{"column":12,"line":92}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"339","location":{"end":{"column":15,"line":88},"start":{"column":13,"line":88}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"341","location":{"end":{"column":14,"line":90},"start":{"column":12,"line":90}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"349","location":{"end":{"column":10,"line":108},"start":{"column":27,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"350","location":{"end":{"column":12,"line":106},"start":{"column":20,"line":102}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"351","location":{"end":{"column":29,"line":111},"start":{"column":11,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"353","location":{"end":{"column":4,"line":130},"start":{"column":25,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"354","location":{"end":{"column":8,"line":128},"start":{"column":32,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"360","location":{"end":{"column":48,"line":115},"start":{"column":14,"line":115}},"mutatorName":"EqualityOperator","replacement":"val.likes.indexOf(loggedInUser) >= -1","status":"Survived"},{"id":"355","location":{"end":{"column":69,"line":115},"start":{"column":14,"line":115}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"357","location":{"end":{"column":69,"line":115},"start":{"column":14,"line":115}},"mutatorName":"LogicalOperator","replacement":"val.likes.indexOf(loggedInUser) > -1 || val.title != ''","status":"Survived"},{"id":"347","location":{"end":{"column":54,"line":99},"start":{"column":15,"line":99}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"358","location":{"end":{"column":48,"line":115},"start":{"column":14,"line":115}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"352","location":{"end":{"column":32,"line":112},"start":{"column":13,"line":112}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"359","location":{"end":{"column":48,"line":115},"start":{"column":14,"line":115}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"364","location":{"end":{"column":69,"line":115},"start":{"column":53,"line":115}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"348","location":{"end":{"column":34,"line":100},"start":{"column":15,"line":100}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"346","location":{"end":{"column":4,"line":131},"start":{"column":19,"line":98}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"345","location":{"end":{"column":11,"line":94},"start":{"column":9,"line":94}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"356","location":{"end":{"column":69,"line":115},"start":{"column":14,"line":115}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"365","location":{"end":{"column":69,"line":115},"start":{"column":53,"line":115}},"mutatorName":"EqualityOperator","replacement":"val.title == ''","status":"Survived"},{"id":"361","location":{"end":{"column":48,"line":115},"start":{"column":14,"line":115}},"mutatorName":"EqualityOperator","replacement":"val.likes.indexOf(loggedInUser) <= -1","status":"Survived"},{"id":"367","location":{"end":{"column":12,"line":126},"start":{"column":70,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"366","location":{"end":{"column":69,"line":115},"start":{"column":67,"line":115}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"363","location":{"end":{"column":69,"line":115},"start":{"column":53,"line":115}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"368","location":{"end":{"column":14,"line":124},"start":{"column":30,"line":116}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"371","location":{"end":{"column":8,"line":131},"start":{"column":6,"line":131}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"372","location":{"end":{"column":8,"line":145},"start":{"column":47,"line":141}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"362","location":{"end":{"column":48,"line":115},"start":{"column":46,"line":115}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"370","location":{"end":{"column":50,"line":125},"start":{"column":28,"line":125}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"369","location":{"end":{"column":50,"line":125},"start":{"column":21,"line":125}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\nimport './Profile.css';\nconst RenderUser = (user) =>(<>\n<div className='wrap summary'>\n<div><span className=\"initials\">{user.username.slice(0,2)}</span></div>\n <div> \n  <h2>{user.username}</h2>\n  <h2> {user.email}</h2>\n  </div>\n  </div>\n</>);\n\nconst RenderInfo = ({data}) =>(\n  <div className='card'>\n    {data.likesTitle !=''? <p><strong>Title you liked: </strong>{data.likesTitle}</p>: null}\n    {data.likesText !=''? <p><strong>Text you liked: </strong>{data.likesText}</p>: null}\n    {data.likesAuthor !=''? <p><strong>likesAuthor: </strong>{data.likesAuthor},</p>: null}\n    {data.category !=''? <p><strong>Category:</strong> {data.category}</p>: null}\n    {data.tags !=''? <p><strong>Tags:</strong>{data.tags}</p>: null}\n    { String(data.links) != '' ? <ul><strong>Links:</strong>{Object.keys(data.links).map((item, index)=>(<li key={index}><a  href={ data.links[item]}>{data.links[item]}</a></li>))\n    \n   }</ul>: null}\n    </div>\n);\n\nconst Summary = ({data}) =>{\n  let newTags=()=>{\n    let tags=String(Object.keys(data).map(item => data[item].tags).join(',')).split(',');\n    let cache=[];\n      for(let i=0; i<tags.length;i++){\n          if(tags[i] !=='' && cache.indexOf(tags[i])==-1 )cache+=[tags[i]]+' ';   \n      }\n      return cache;\n  };\n\n  let newCat=()=>{ \n    let cat=String(Object.keys(data).map(item => data[item].category).join(',')).split(',');\n    let cache=[];\n    for(let i=0; i<cat.length;i++){\n        if(cat[i] !=='' && cache.indexOf(cat[i])==-1 )cache+=[cat[i]]+' ';  \n    }\n    return cache;\n  };\n\n  let newTitles=()=>{ \n    let cat=String(Object.keys(data).map(item => data[item].likesTitle).join(',')).split(',');\n    let cache=[];\n    for(let i=0; i<cat.length;i++){\n        if(cat[i] !=='' && cache.indexOf(cat[i])==-1 )cache+=`${[cat[i]]} , `;  \n    }\n    return cache;\n  };\n\n\nlet titlesData = newTitles();\nlet tagsData = newTags();\nconst catData =newCat();\n let color=[\"#efd9ce\",\"#dec0f1\",\"#b79ced\",\"#957fef\",\"#7161ef\", \"#efd9ce\",\"#dec0f1\",\"#b79ced\",\"#957fef\",\"#7161ef\"];\n\n\nreturn(\n  <>\n  <div>\n    <h2>Summary:</h2>\n    <div className=\"summary-p\">\n    <div>You have liked <strong>{Object.keys(data).length-1}</strong> items.</div>\n    <div className=\"line\">Your favorite tags: {String(tagsData).split(' ').map((e, i)=>(String(e)!=''?<span className='tag'   style={{backgroundColor: color[Math.floor(Math.random()*color.length)]}} key={`tags-data${i}`}>{e}</span>: '')) }</div>\n    <div className=\"line\">with categories {String(catData).split(' ').map((e, i)=>(String(e)!=''?<span className='cat'   style={{backgroundColor: color[Math.floor(Math.random()*color.length)]}} key={`cat-data${i}`}>{e}</span>: '')) }</div>\n\n    <div className=\"line\"><strong>Book titles you liked:</strong></div>\n    <ul className='bookTitle'>{String(titlesData).split(' ,').map((e, i)=><li key={`title-data${i}`} style={{backgroundColor: color[Math.floor(Math.random()*color.length)]}}>{e}</li>) }</ul>\n</div>\n    {/* <div>category {[String(data[item].category)].reduce((a,b) => a.includes(b) ? a.concat(b)  : null)}</div> */}\n    </div>\n  </>)\n};\n\n\nconst Profile =  ( {loggedInUser} ) => {\n  console.log('Profile',loggedInUser );\nconst [user, setUser]=useState({\n  username:'',\n  email:'',\n});\nconst [data, setData] = useState([{\n \n  likesTitle:'',\n  likesText:'',\n  likesAuthor:'',\n  category:'',\n  text:'',\n  category:'',\n  tags:'',\n  links:''\n}]);\n\n//useEffect for RenderUser\n  useEffect(() => {\n        fetch(`/api/user/profile?_id=${loggedInUser}`)\n        .then((res) => res.json())\n        .then((result) => {\n           setUser({\n            ...user,\n            username: result.username,\n            email: result.email\n          });\n          return user\n        });\n\n//useEffect for RenderInfo\n    fetch('/api/collections')\n      .then((res) => res.json())\n      .then((result) => {\n       result.forEach((val) => {\n          if(val.likes.indexOf(loggedInUser)>-1  && (val.title) !=''){\n            let responseData={\n              likesTitle:val.title,\n              likesText:val.description,\n              likesAuthor:val.author,\n              category:val.category,\n              text:val.text,\n              tags:val.tags,\n              links:val.links,\n            };\n            setData(prev=> [...prev,responseData]);\n          }\n          \n      });\n              return data;\n  });\n  }, []);\nreturn (  \n  <>\n  <div className=\"profile\"> \n  { loggedInUser ?\n  <div className='maxW'>\n     <RenderUser {...user} /> \n     <Summary data={data}/>\n     <div className='cardWrap'>\n     { \n       Object.keys(data).map((item, index) => {\n        return  <RenderInfo \n        key={index} \n        data={data[item]}/>\n      })\n     }\n     </div>\n  </div> : <div>Relogin</div>\n  }\n </div>\n </>\n );\n\n};\n\nexport default Profile;\n"},"/Users/steve/learnvault/client/src/components/PageNotFound.jsx":{"language":"javascript","mutants":[{"id":"194","location":{"end":{"column":2,"line":7},"start":{"column":22,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\n\nimport './PageNotFound.css';\n\nconst PageNotFound = () => (\n  <div className=\"page-not-found\">Page not found.</div>\n);\n\nexport default PageNotFound;\n"},"/Users/steve/learnvault/client/src/components/Register.jsx":{"language":"javascript","mutants":[{"id":"377","location":{"end":{"column":21,"line":15},"start":{"column":15,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"376","location":{"end":{"column":20,"line":14},"start":{"column":14,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"379","location":{"end":{"column":4,"line":22},"start":{"column":17,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"378","location":{"end":{"column":4,"line":19},"start":{"column":11,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"381","location":{"end":{"column":18,"line":24},"start":{"column":12,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"382","location":{"end":{"column":2,"line":315},"start":{"column":43,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"373","location":{"end":{"column":3,"line":26},"start":{"column":30,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"386","location":{"end":{"column":15,"line":39},"start":{"column":13,"line":39}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"374","location":{"end":{"column":2,"line":26},"start":{"column":42,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"375","location":{"end":{"column":4,"line":16},"start":{"column":9,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"385","location":{"end":{"column":4,"line":44},"start":{"column":44,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"392","location":{"end":{"column":15,"line":46},"start":{"column":13,"line":46}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"384","location":{"end":{"column":46,"line":37},"start":{"column":44,"line":37}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"393","location":{"end":{"column":17,"line":47},"start":{"column":15,"line":47}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"395","location":{"end":{"column":20,"line":49},"start":{"column":18,"line":49}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"394","location":{"end":{"column":15,"line":48},"start":{"column":13,"line":48}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"396","location":{"end":{"column":24,"line":50},"start":{"column":19,"line":50}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"398","location":{"end":{"column":43,"line":58},"start":{"column":38,"line":58}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"380","location":{"end":{"column":4,"line":25},"start":{"column":14,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"383","location":{"end":{"column":40,"line":36},"start":{"column":38,"line":36}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"387","location":{"end":{"column":17,"line":40},"start":{"column":15,"line":40}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"401","location":{"end":{"column":56,"line":62},"start":{"column":54,"line":62}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"390","location":{"end":{"column":24,"line":43},"start":{"column":19,"line":43}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"388","location":{"end":{"column":15,"line":41},"start":{"column":13,"line":41}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"389","location":{"end":{"column":20,"line":42},"start":{"column":18,"line":42}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"403","location":{"end":{"column":4,"line":76},"start":{"column":36,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"404","location":{"end":{"column":27,"line":70},"start":{"column":22,"line":70}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"397","location":{"end":{"column":29,"line":57},"start":{"column":24,"line":57}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"407","location":{"end":{"column":24,"line":73},"start":{"column":22,"line":73}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"391","location":{"end":{"column":4,"line":51},"start":{"column":58,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"409","location":{"end":{"column":31,"line":75},"start":{"column":29,"line":75}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"412","location":{"end":{"column":49,"line":86},"start":{"column":9,"line":86}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"411","location":{"end":{"column":49,"line":86},"start":{"column":9,"line":86}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"400","location":{"end":{"column":56,"line":61},"start":{"column":54,"line":61}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"408","location":{"end":{"column":24,"line":74},"start":{"column":22,"line":74}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"405","location":{"end":{"column":19,"line":71},"start":{"column":14,"line":71}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"416","location":{"end":{"column":28,"line":88},"start":{"column":24,"line":88}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"402","location":{"end":{"column":70,"line":63},"start":{"column":68,"line":63}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"410","location":{"end":{"column":4,"line":94},"start":{"column":37,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"399","location":{"end":{"column":50,"line":60},"start":{"column":48,"line":60}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"414","location":{"end":{"column":6,"line":91},"start":{"column":51,"line":86}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"413","location":{"end":{"column":49,"line":86},"start":{"column":9,"line":86}},"mutatorName":"BooleanLiteral","replacement":"regex.test(String(email).toLowerCase())","status":"Survived"},{"id":"420","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"418","location":{"end":{"column":21,"line":93},"start":{"column":19,"line":93}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"415","location":{"end":{"column":49,"line":87},"start":{"column":21,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"419","location":{"end":{"column":4,"line":112},"start":{"column":40,"line":100}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"425","location":{"end":{"column":28,"line":106},"start":{"column":24,"line":106}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"422","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"BooleanLiteral","replacement":"regex.test(username)","status":"Survived"},{"id":"406","location":{"end":{"column":21,"line":72},"start":{"column":19,"line":72}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"429","location":{"end":{"column":36,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"430","location":{"end":{"column":36,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"417","location":{"end":{"column":20,"line":89},"start":{"column":16,"line":89}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"432","location":{"end":{"column":36,"line":119},"start":{"column":9,"line":119}},"mutatorName":"EqualityOperator","replacement":"String(password).length >= 3","status":"Survived"},{"id":"434","location":{"end":{"column":55,"line":120},"start":{"column":24,"line":120}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"423","location":{"end":{"column":6,"line":109},"start":{"column":32,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"424","location":{"end":{"column":55,"line":105},"start":{"column":24,"line":105}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"427","location":{"end":{"column":24,"line":111},"start":{"column":22,"line":111}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"433","location":{"end":{"column":6,"line":124},"start":{"column":38,"line":119}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"438","location":{"end":{"column":4,"line":142},"start":{"column":39,"line":133}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"436","location":{"end":{"column":20,"line":122},"start":{"column":16,"line":122}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"439","location":{"end":{"column":55,"line":134},"start":{"column":9,"line":134}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"428","location":{"end":{"column":4,"line":127},"start":{"column":40,"line":118}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"426","location":{"end":{"column":20,"line":107},"start":{"column":16,"line":107}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"421","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"431","location":{"end":{"column":36,"line":119},"start":{"column":9,"line":119}},"mutatorName":"EqualityOperator","replacement":"String(password).length <= 3","status":"Survived"},{"id":"440","location":{"end":{"column":55,"line":134},"start":{"column":9,"line":134}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"435","location":{"end":{"column":28,"line":121},"start":{"column":24,"line":121}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"441","location":{"end":{"column":55,"line":134},"start":{"column":9,"line":134}},"mutatorName":"EqualityOperator","replacement":"password.password === passwordConfirm.password","status":"Survived"},{"id":"437","location":{"end":{"column":24,"line":126},"start":{"column":22,"line":126}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"442","location":{"end":{"column":6,"line":139},"start":{"column":57,"line":134}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"447","location":{"end":{"column":4,"line":184},"start":{"column":36,"line":149}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"448","location":{"end":{"column":70,"line":150},"start":{"column":22,"line":150}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"446","location":{"end":{"column":31,"line":141},"start":{"column":29,"line":141}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"449","location":{"end":{"column":49,"line":152},"start":{"column":34,"line":152}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"444","location":{"end":{"column":28,"line":136},"start":{"column":24,"line":136}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"445","location":{"end":{"column":20,"line":137},"start":{"column":16,"line":137}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"450","location":{"end":{"column":6,"line":158},"start":{"column":51,"line":152}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"455","location":{"end":{"column":32,"line":164},"start":{"column":9,"line":164}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"451","location":{"end":{"column":21,"line":153},"start":{"column":15,"line":153}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"460","location":{"end":{"column":20,"line":167},"start":{"column":16,"line":167}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"459","location":{"end":{"column":28,"line":166},"start":{"column":24,"line":166}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"443","location":{"end":{"column":60,"line":135},"start":{"column":31,"line":135}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"454","location":{"end":{"column":43,"line":155},"start":{"column":25,"line":155}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"453","location":{"end":{"column":23,"line":155},"start":{"column":9,"line":155}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"452","location":{"end":{"column":8,"line":156},"start":{"column":16,"line":154}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"456","location":{"end":{"column":32,"line":164},"start":{"column":9,"line":164}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"457","location":{"end":{"column":6,"line":168},"start":{"column":34,"line":164}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"458","location":{"end":{"column":64,"line":165},"start":{"column":21,"line":165}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"461","location":{"end":{"column":27,"line":171},"start":{"column":9,"line":171}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"463","location":{"end":{"column":6,"line":175},"start":{"column":29,"line":171}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"462","location":{"end":{"column":27,"line":171},"start":{"column":9,"line":171}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"464","location":{"end":{"column":48,"line":172},"start":{"column":24,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"469","location":{"end":{"column":6,"line":183},"start":{"column":38,"line":179}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"472","location":{"end":{"column":23,"line":203},"start":{"column":9,"line":203}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"465","location":{"end":{"column":28,"line":173},"start":{"column":24,"line":173}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"475","location":{"end":{"column":4,"line":211},"start":{"column":53,"line":209}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"478","location":{"end":{"column":70,"line":214},"start":{"column":17,"line":214}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"468","location":{"end":{"column":36,"line":179},"start":{"column":9,"line":179}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"476","location":{"end":{"column":60,"line":210},"start":{"column":17,"line":210}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"470","location":{"end":{"column":23,"line":182},"start":{"column":20,"line":182}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"479","location":{"end":{"column":68,"line":214},"start":{"column":46,"line":214}},"mutatorName":"BooleanLiteral","replacement":"password.showPassword","status":"Survived"},{"id":"466","location":{"end":{"column":20,"line":174},"start":{"column":16,"line":174}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"467","location":{"end":{"column":36,"line":179},"start":{"column":9,"line":179}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"471","location":{"end":{"column":4,"line":207},"start":{"column":29,"line":190}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"483","location":{"end":{"column":4,"line":223},"start":{"column":48,"line":221}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"473","location":{"end":{"column":23,"line":203},"start":{"column":9,"line":203}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"474","location":{"end":{"column":4,"line":211},"start":{"column":32,"line":209}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"486","location":{"end":{"column":4,"line":227},"start":{"column":46,"line":225}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"477","location":{"end":{"column":4,"line":215},"start":{"column":41,"line":213}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"482","location":{"end":{"column":74,"line":218},"start":{"column":24,"line":218}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"487","location":{"end":{"column":4,"line":231},"start":{"column":53,"line":229}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"484","location":{"end":{"column":91,"line":222},"start":{"column":24,"line":222}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"488","location":{"end":{"column":8,"line":254},"start":{"column":8,"line":241}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"490","location":{"end":{"column":8,"line":254},"start":{"column":8,"line":241}},"mutatorName":"LogicalOperator","replacement":"error || <ul className=\"form-error\">\n          {errorEmail && <li className=\"form-error__item\">{errorEmail}</li>}\n          {errorUsername && <li className=\"form-error__item\">{errorUsername}</li>}\n          {errorPassword && <li className=\"form-error__item\">{errorPassword}</li>}\n          {errorPasswordConfirm && <li className=\"form-error__item\">{errorPasswordConfirm}</li>}\n        </ul>","status":"Survived"},{"id":"497","location":{"end":{"column":12,"line":249},"start":{"column":12,"line":247}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"492","location":{"end":{"column":76,"line":243},"start":{"column":12,"line":243}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"494","location":{"end":{"column":12,"line":246},"start":{"column":12,"line":244}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"485","location":{"end":{"column":89,"line":222},"start":{"column":60,"line":222}},"mutatorName":"BooleanLiteral","replacement":"passwordConfirm.showPassword","status":"Survived"},{"id":"480","location":{"end":{"column":4,"line":219},"start":{"column":39,"line":217}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"493","location":{"end":{"column":76,"line":243},"start":{"column":12,"line":243}},"mutatorName":"LogicalOperator","replacement":"errorEmail || <li className=\"form-error__item\">{errorEmail}</li>","status":"Survived"},{"id":"491","location":{"end":{"column":76,"line":243},"start":{"column":12,"line":243}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"481","location":{"end":{"column":4,"line":219},"start":{"column":60,"line":217}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"503","location":{"end":{"column":125,"line":258},"start":{"column":94,"line":258}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"495","location":{"end":{"column":12,"line":246},"start":{"column":12,"line":244}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"496","location":{"end":{"column":12,"line":246},"start":{"column":12,"line":244}},"mutatorName":"LogicalOperator","replacement":"errorUsername || <li className=\"form-error__item\">{errorUsername}</li>","status":"Survived"},{"id":"489","location":{"end":{"column":8,"line":254},"start":{"column":8,"line":241}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"498","location":{"end":{"column":12,"line":249},"start":{"column":12,"line":247}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"505","location":{"end":{"column":49,"line":269},"start":{"column":43,"line":269}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"502","location":{"end":{"column":12,"line":252},"start":{"column":12,"line":250}},"mutatorName":"LogicalOperator","replacement":"errorPasswordConfirm || <li className=\"form-error__item\">{errorPasswordConfirm}</li>","status":"Survived"},{"id":"506","location":{"end":{"column":62,"line":269},"start":{"column":52,"line":269}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"508","location":{"end":{"column":56,"line":292},"start":{"column":50,"line":292}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"504","location":{"end":{"column":134,"line":262},"start":{"column":100,"line":262}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"501","location":{"end":{"column":12,"line":252},"start":{"column":12,"line":250}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"500","location":{"end":{"column":12,"line":252},"start":{"column":12,"line":250}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"507","location":{"end":{"column":54,"line":271},"start":{"column":44,"line":271}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"499","location":{"end":{"column":12,"line":249},"start":{"column":12,"line":247}},"mutatorName":"LogicalOperator","replacement":"errorPassword || <li className=\"form-error__item\">{errorPassword}</li>","status":"Survived"},{"id":"509","location":{"end":{"column":69,"line":292},"start":{"column":59,"line":292}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"510","location":{"end":{"column":61,"line":294},"start":{"column":51,"line":294}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  TextField, Button, InputLabel, InputAdornment, IconButton, OutlinedInput, FormControl, makeStyles,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\nimport { useHistory } from 'react-router-dom';\n\nimport './Register.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '40ch',\n  },\n}));\n\nconst register = ({ setLoggedInUser }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  // -----------\n  // Form fields\n  // -----------\n\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n  const [passwordConfirm, setPasswordConfirm] = useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  // --------------\n  // Error messages\n  // --------------\n\n  let containsErrors = false;\n  const [error, setError] = useState(false);\n\n  const [errorEmail, setErrorEmail] = useState('');\n  const [errorUsername, setErrorUsername] = useState('');\n  const [errorPassword, setErrorPassword] = useState('');\n  const [errorPasswordConfirm, setErrorPasswordConfirm] = useState('');\n\n  // ------------------------\n  // Clear out error messages\n  // ------------------------\n\n  const clearErrorMessages = () => {\n    containsErrors = false;\n    setError(false);\n    setErrorEmail('');\n    setErrorUsername('');\n    setErrorPassword('');\n    setErrorPasswordConfirm('');\n  };\n\n  // ---------------------\n  // Validate email format\n  // ---------------------\n\n  const validateEmailFormat = () => {\n    // Regex for email validation from: https://stackoverflow.com/a/46181/2040509\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regex.test(String(email).toLowerCase())) {\n      setErrorEmail('Please enter a valid email');\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorEmail('');\n  };\n\n  // ------------------------\n  // Validate username format\n  // ------------------------\n\n  const validateUsernameFormat = () => {\n    // Regex for username validation from: https://www.regextester.com/104030\n    const regex = /^[a-z0-9_-]{3,16}$/;\n\n    if (!regex.test(username)) {\n      setErrorUsername('Please enter a valid username');\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorUsername('');\n  };\n\n  // ------------------------\n  // Validate password format\n  // ------------------------\n\n  const validatePasswordFormat = () => {\n    if (String(password).length < 3) {\n      setErrorPassword('Please enter a valid password');\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorPassword('');\n  };\n\n  // -----------------------\n  // Validate password match\n  // -----------------------\n\n  const validatePasswordMatch = () => {\n    if (password.password !== passwordConfirm.password) {\n      setErrorPasswordConfirm(\"Password fields don't match\");\n      containsErrors = true;\n      setError(true);\n      return;\n    }\n\n    setErrorPasswordConfirm('');\n  };\n\n  // --------------\n  // Send user data\n  // --------------\n  // TODO: clear any tokens that might be lingering in the users cookies\n\n  const sendUserData = async () => {\n    const userInfo = { email, username, password: password.password };\n\n    const response = await fetch('/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userInfo),\n    });\n\n    const data = await response.json();\n    console.log(data);\n\n    // Email already exists\n    if (data.emailAlreadyExists) {\n      setErrorEmail('An account with that email already exists');\n      containsErrors = true;\n      setError(true);\n    }\n\n    // Username is taken\n    if (data.usernameTaken) {\n      setErrorUsername('Username already taken');\n      containsErrors = true;\n      setError(true);\n    }\n\n    // TODO: handle any server errors that might have occured\n\n    if (data.registrationSuccessful) {\n      // TODO: show successful registration message\n      setLoggedInUser(data.userId);\n      history.push('/');\n    }\n  };\n\n  // -----------\n  // Form submit\n  // -----------\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    // Clear our all errors before validating\n    clearErrorMessages();\n\n    // Validate all inputs\n    validateEmailFormat();\n    validateUsernameFormat();\n    validatePasswordFormat();\n    validatePasswordMatch();\n\n    // If any of the inputs don't pass validation stop submission\n    if (containsErrors) return;\n\n    // Send the data to the backend and do backend validation\n    sendUserData();\n  };\n\n  const handlePasswordChange = (prop) => (event) => {\n    setPassword({ ...password, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setPassword({ ...password, showPassword: !password.showPassword });\n  };\n\n  const handlePasswordConfirmChange = (prop) => (event) => {\n    setPasswordConfirm({ ...passwordConfirm, [prop]: event.target.value });\n  };\n\n  const handleClickShowPasswordConfirm = () => {\n    setPasswordConfirm({ ...passwordConfirm, showPassword: !passwordConfirm.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleMouseDownPasswordConfirm = (event) => {\n    event.preventDefault();\n  };\n\n  // ------\n  // Render\n  // ------\n\n  return (\n    <div className=\"register-page\">\n      <h1>Register</h1>\n\n      {error && (\n        <ul className=\"form-error\">\n          {errorEmail && <li className=\"form-error__item\">{errorEmail}</li>}\n          {errorUsername && (\n            <li className=\"form-error__item\">{errorUsername}</li>\n          )}\n          {errorPassword && (\n            <li className=\"form-error__item\">{errorPassword}</li>\n          )}\n          {errorPasswordConfirm && (\n            <li className=\"form-error__item\">{errorPasswordConfirm}</li>\n          )}\n        </ul>\n      )}\n\n      <form className=\"register-form\">\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n          <TextField id=\"outlined-required-email\" label=\"Email\" variant=\"outlined\" onChange={(e) => setEmail(e.target.value)} value={email} />\n        </FormControl>\n        <br />\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n          <TextField id=\"outlined-required-username\" label=\"Username\" variant=\"outlined\" onChange={(e) => setUsername(e.target.value)} value={username} />\n        </FormControl>\n        <br />\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={password.showPassword ? 'text' : 'password'}\n            value={password.password}\n            onChange={handlePasswordChange('password')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {password.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n              )}\n            labelWidth={70}\n          />\n        </FormControl>\n        <br />\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-password-confirm\">Confirm Password</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password-confirm\"\n            type={passwordConfirm.showPassword ? 'text' : 'password'}\n            value={passwordConfirm.password}\n            onChange={handlePasswordConfirmChange('password')}\n            endAdornment={(\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPasswordConfirm}\n                  onMouseDown={handleMouseDownPasswordConfirm}\n                  edge=\"end\"\n                >\n                  {passwordConfirm.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n              )}\n            labelWidth={135}\n          />\n        </FormControl>\n        <br />\n        <Button onClick={submitForm} variant=\"contained\" color=\"primary\">Submit</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default register;\n"},"/Users/steve/learnvault/client/src/components/WithAuth.jsx":{"language":"javascript","mutants":[{"id":"520","location":{"end":{"column":4,"line":45},"start":{"column":19,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"518","location":{"end":{"column":46,"line":8},"start":{"column":42,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"521","location":{"end":{"column":28,"line":16},"start":{"column":11,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"522","location":{"end":{"column":8,"line":28},"start":{"column":22,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"519","location":{"end":{"column":49,"line":9},"start":{"column":44,"line":9}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"517","location":{"end":{"column":2,"line":67},"start":{"column":7,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"526","location":{"end":{"column":10,"line":21},"start":{"column":33,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"524","location":{"end":{"column":31,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"525","location":{"end":{"column":31,"line":18},"start":{"column":13,"line":18}},"mutatorName":"EqualityOperator","replacement":"res.status !== 200","status":"Survived"},{"id":"527","location":{"end":{"column":27,"line":19},"start":{"column":22,"line":19}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"523","location":{"end":{"column":31,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"528","location":{"end":{"column":45,"line":24},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"529","location":{"end":{"column":45,"line":24},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"531","location":{"end":{"column":51,"line":23},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"530","location":{"end":{"column":45,"line":24},"start":{"column":13,"line":23}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"532","location":{"end":{"column":51,"line":23},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"533","location":{"end":{"column":51,"line":23},"start":{"column":13,"line":23}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"534","location":{"end":{"column":51,"line":23},"start":{"column":38,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"535","location":{"end":{"column":45,"line":24},"start":{"column":14,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"537","location":{"end":{"column":45,"line":24},"start":{"column":14,"line":24}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"536","location":{"end":{"column":45,"line":24},"start":{"column":14,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"538","location":{"end":{"column":45,"line":24},"start":{"column":39,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"539","location":{"end":{"column":10,"line":26},"start":{"column":47,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"540","location":{"end":{"column":81,"line":25},"start":{"column":25,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"543","location":{"end":{"column":45,"line":31},"start":{"column":13,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"542","location":{"end":{"column":45,"line":31},"start":{"column":13,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"541","location":{"end":{"column":8,"line":35},"start":{"column":23,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"544","location":{"end":{"column":45,"line":31},"start":{"column":13,"line":30}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"545","location":{"end":{"column":51,"line":30},"start":{"column":13,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"546","location":{"end":{"column":51,"line":30},"start":{"column":13,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"547","location":{"end":{"column":51,"line":30},"start":{"column":13,"line":30}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"548","location":{"end":{"column":51,"line":30},"start":{"column":38,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"549","location":{"end":{"column":45,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"550","location":{"end":{"column":45,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"551","location":{"end":{"column":45,"line":31},"start":{"column":14,"line":31}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"552","location":{"end":{"column":45,"line":31},"start":{"column":39,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"553","location":{"end":{"column":10,"line":33},"start":{"column":47,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"554","location":{"end":{"column":55,"line":32},"start":{"column":23,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"555","location":{"end":{"column":8,"line":44},"start":{"column":23,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"556","location":{"end":{"column":45,"line":38},"start":{"column":13,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"557","location":{"end":{"column":45,"line":38},"start":{"column":13,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"558","location":{"end":{"column":45,"line":38},"start":{"column":13,"line":37}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Killed"},{"id":"559","location":{"end":{"column":51,"line":37},"start":{"column":13,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"561","location":{"end":{"column":51,"line":37},"start":{"column":13,"line":37}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"560","location":{"end":{"column":51,"line":37},"start":{"column":13,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"562","location":{"end":{"column":51,"line":37},"start":{"column":38,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"563","location":{"end":{"column":45,"line":38},"start":{"column":14,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"564","location":{"end":{"column":45,"line":38},"start":{"column":14,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"565","location":{"end":{"column":45,"line":38},"start":{"column":14,"line":38}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Killed"},{"id":"567","location":{"end":{"column":10,"line":40},"start":{"column":47,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"566","location":{"end":{"column":45,"line":38},"start":{"column":39,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"568","location":{"end":{"column":68,"line":39},"start":{"column":25,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"569","location":{"end":{"column":27,"line":41},"start":{"column":25,"line":41}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"570","location":{"end":{"column":25,"line":42},"start":{"column":20,"line":42}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"571","location":{"end":{"column":25,"line":43},"start":{"column":21,"line":43}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"572","location":{"end":{"column":8,"line":45},"start":{"column":6,"line":45}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"573","location":{"end":{"column":14,"line":51},"start":{"column":7,"line":51}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"574","location":{"end":{"column":14,"line":51},"start":{"column":7,"line":51}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"575","location":{"end":{"column":4,"line":54},"start":{"column":16,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"576","location":{"end":{"column":15,"line":56},"start":{"column":7,"line":56}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"577","location":{"end":{"column":15,"line":56},"start":{"column":7,"line":56}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"579","location":{"end":{"column":2,"line":71},"start":{"column":22,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"578","location":{"end":{"column":4,"line":61},"start":{"column":17,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst WithAuth = ({\n  Component, setLoggedInUser, loggedInUser, id,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  // console.log('props', Component, setLoggedInUser, loggedInUser, id);\n  // console.log('useState loading', loading);\n  // console.log('useState redirect', redirect);\n\n  useEffect(() => {\n    fetch('/api/checkToken')\n      .then((res) => {\n        if (res.status === 200) {\n          setLoading(false);\n          return res.json();\n        }\n        const error = new Error(res.statusText);\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.error('Error: fetch /api/checkToken did not return status 200', error);\n        }\n        // throw error;\n      })\n      .then((data) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log('Success: fetch /api/checkToken', data);\n        }\n        setLoggedInUser(data);\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.error('Error: fetch /api/checkToken caught error', err);\n        }\n        setLoggedInUser('');\n        setLoading(false);\n        setRedirect(true);\n      });\n  }, []);\n\n  // console.log('useEffect loading', loading);\n  // console.log('useEffect redirect', redirect);\n  // console.log('useEffect loggedInUser', loggedInUser);\n\n  if (loading) {\n    // console.log('returning null');\n    return null;\n  }\n\n  if (redirect) {\n    // console.log('redirecting...');\n    return (\n      <Redirect to=\"/login\" />\n    );\n  }\n\n  // console.log('rendering Component', Component);\n  return (\n    <Component loggedInUser={loggedInUser} id={id} />\n  );\n};\n\nWithAuth.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n};\n\nexport default WithAuth;\n"},"/Users/steve/learnvault/client/src/components/ResultAlert.jsx":{"language":"javascript","mutants":[{"id":"516","location":{"end":{"column":12,"line":13},"start":{"column":26,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"513","location":{"end":{"column":30,"line":7},"start":{"column":6,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"511","location":{"end":{"column":2,"line":27},"start":{"column":21,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"512","location":{"end":{"column":30,"line":7},"start":{"column":6,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"515","location":{"end":{"column":30,"line":7},"start":{"column":23,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"514","location":{"end":{"column":30,"line":7},"start":{"column":6,"line":7}},"mutatorName":"EqualityOperator","replacement":"props.result !== 'error'","status":"Survived"}],"source":"import React from 'react';\n\nimport './ResultAlert.css';\n\nconst ResultAlert = (props) => (\n  <div id=\"result-alert\">\n    {props.result === 'error' ? (\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            props.setResult(null);\n          }}\n        >\n          X\n        </button>\n        <h1>Error in AddCollection</h1>\n        <p>Please check form and try again</p>\n      </div>\n    ) : (\n      <div>\n        <h1>AddCollection successful</h1>\n        <p></p>\n      </div>\n    )}\n  </div>\n);\nexport default ResultAlert;\n"},"/Users/steve/learnvault/client/src/components/collections/AddCollection.jsx":{"language":"javascript","mutants":[{"id":"580","location":{"end":{"column":3,"line":32},"start":{"column":30,"line":15}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"581","location":{"end":{"column":2,"line":32},"start":{"column":42,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"584","location":{"end":{"column":21,"line":18},"start":{"column":15,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"590","location":{"end":{"column":2,"line":200},"start":{"column":45,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"589","location":{"end":{"column":18,"line":30},"start":{"column":12,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"591","location":{"end":{"column":33,"line":36},"start":{"column":21,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"583","location":{"end":{"column":20,"line":17},"start":{"column":14,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"582","location":{"end":{"column":4,"line":19},"start":{"column":9,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"586","location":{"end":{"column":4,"line":25},"start":{"column":16,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"585","location":{"end":{"column":4,"line":22},"start":{"column":11,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"587","location":{"end":{"column":4,"line":28},"start":{"column":17,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"588","location":{"end":{"column":4,"line":31},"start":{"column":14,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"594","location":{"end":{"column":4,"line":50},"start":{"column":44,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"593","location":{"end":{"column":49,"line":38},"start":{"column":44,"line":38}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"592","location":{"end":{"column":31,"line":36},"start":{"column":29,"line":36}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"595","location":{"end":{"column":14,"line":42},"start":{"column":12,"line":42}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"596","location":{"end":{"column":20,"line":43},"start":{"column":18,"line":43}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"597","location":{"end":{"column":18,"line":44},"start":{"column":13,"line":44}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"598","location":{"end":{"column":21,"line":45},"start":{"column":19,"line":45}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"599","location":{"end":{"column":13,"line":46},"start":{"column":11,"line":46}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"600","location":{"end":{"column":17,"line":47},"start":{"column":15,"line":47}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"602","location":{"end":{"column":14,"line":49},"start":{"column":12,"line":49}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"601","location":{"end":{"column":13,"line":48},"start":{"column":11,"line":48}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"603","location":{"end":{"column":53,"line":65},"start":{"column":48,"line":65}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"606","location":{"end":{"column":64,"line":76},"start":{"column":46,"line":76}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"605","location":{"end":{"column":6,"line":72},"start":{"column":17,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"604","location":{"end":{"column":4,"line":73},"start":{"column":35,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"607","location":{"end":{"column":63,"line":76},"start":{"column":47,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"608","location":{"end":{"column":4,"line":81},"start":{"column":30,"line":79}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"609","location":{"end":{"column":50,"line":80},"start":{"column":18,"line":80}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"611","location":{"end":{"column":4,"line":95},"start":{"column":29,"line":83}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"613","location":{"end":{"column":35,"line":84},"start":{"column":9,"line":84}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"610","location":{"end":{"column":49,"line":80},"start":{"column":33,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"614","location":{"end":{"column":35,"line":84},"start":{"column":9,"line":84}},"mutatorName":"EqualityOperator","replacement":"e.target.name !== 'hidden'","status":"Survived"},{"id":"612","location":{"end":{"column":35,"line":84},"start":{"column":9,"line":84}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"615","location":{"end":{"column":35,"line":84},"start":{"column":27,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"616","location":{"end":{"column":6,"line":89},"start":{"column":37,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"617","location":{"end":{"column":8,"line":88},"start":{"column":19,"line":85}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"618","location":{"end":{"column":24,"line":87},"start":{"column":17,"line":87}},"mutatorName":"BooleanLiteral","replacement":"hidden","status":"Survived"},{"id":"619","location":{"end":{"column":6,"line":94},"start":{"column":12,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"620","location":{"end":{"column":8,"line":93},"start":{"column":19,"line":90}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"621","location":{"end":{"column":4,"line":133},"start":{"column":32,"line":97}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"622","location":{"end":{"column":20,"line":99},"start":{"column":18,"line":99}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"624","location":{"end":{"column":54,"line":101},"start":{"column":11,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"625","location":{"end":{"column":54,"line":101},"start":{"column":11,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"623","location":{"end":{"column":6,"line":106},"start":{"column":44,"line":100}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"626","location":{"end":{"column":54,"line":101},"start":{"column":11,"line":101}},"mutatorName":"LogicalOperator","replacement":"key.indexOf('link') > -1 || key !== 'links'","status":"Survived"},{"id":"627","location":{"end":{"column":35,"line":101},"start":{"column":11,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"628","location":{"end":{"column":35,"line":101},"start":{"column":11,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"629","location":{"end":{"column":35,"line":101},"start":{"column":11,"line":101}},"mutatorName":"EqualityOperator","replacement":"key.indexOf('link') >= -1","status":"Survived"},{"id":"630","location":{"end":{"column":35,"line":101},"start":{"column":11,"line":101}},"mutatorName":"EqualityOperator","replacement":"key.indexOf('link') <= -1","status":"Survived"},{"id":"631","location":{"end":{"column":29,"line":101},"start":{"column":23,"line":101}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"632","location":{"end":{"column":35,"line":101},"start":{"column":33,"line":101}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"633","location":{"end":{"column":54,"line":101},"start":{"column":39,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"634","location":{"end":{"column":54,"line":101},"start":{"column":39,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"635","location":{"end":{"column":54,"line":101},"start":{"column":39,"line":101}},"mutatorName":"EqualityOperator","replacement":"key === 'links'","status":"Survived"},{"id":"638","location":{"end":{"column":29,"line":107},"start":{"column":11,"line":107}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"636","location":{"end":{"column":54,"line":101},"start":{"column":47,"line":101}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"639","location":{"end":{"column":6,"line":113},"start":{"column":31,"line":107}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"637","location":{"end":{"column":8,"line":104},"start":{"column":56,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"640","location":{"end":{"column":21,"line":108},"start":{"column":15,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"641","location":{"end":{"column":8,"line":111},"start":{"column":16,"line":109}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"642","location":{"end":{"column":23,"line":110},"start":{"column":9,"line":110}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"643","location":{"end":{"column":43,"line":110},"start":{"column":25,"line":110}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"644","location":{"end":{"column":42,"line":114},"start":{"column":13,"line":114}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"645","location":{"end":{"column":8,"line":125},"start":{"column":23,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"646","location":{"end":{"column":17,"line":116},"start":{"column":13,"line":116}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"647","location":{"end":{"column":17,"line":116},"start":{"column":13,"line":116}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"648","location":{"end":{"column":10,"line":124},"start":{"column":19,"line":116}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"649","location":{"end":{"column":45,"line":118},"start":{"column":15,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"650","location":{"end":{"column":45,"line":118},"start":{"column":15,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"651","location":{"end":{"column":45,"line":118},"start":{"column":15,"line":117}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"652","location":{"end":{"column":53,"line":117},"start":{"column":15,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"653","location":{"end":{"column":53,"line":117},"start":{"column":15,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"654","location":{"end":{"column":53,"line":117},"start":{"column":15,"line":117}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"655","location":{"end":{"column":53,"line":117},"start":{"column":40,"line":117}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"656","location":{"end":{"column":45,"line":118},"start":{"column":14,"line":118}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"657","location":{"end":{"column":45,"line":118},"start":{"column":14,"line":118}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"659","location":{"end":{"column":45,"line":118},"start":{"column":39,"line":118}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"658","location":{"end":{"column":45,"line":118},"start":{"column":14,"line":118}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"660","location":{"end":{"column":12,"line":121},"start":{"column":47,"line":118}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"661","location":{"end":{"column":52,"line":119},"start":{"column":25,"line":119}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"662","location":{"end":{"column":35,"line":120},"start":{"column":25,"line":120}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"663","location":{"end":{"column":30,"line":122},"start":{"column":21,"line":122}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"664","location":{"end":{"column":45,"line":123},"start":{"column":22,"line":123}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"666","location":{"end":{"column":8,"line":132},"start":{"column":23,"line":126}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"665","location":{"end":{"column":44,"line":123},"start":{"column":40,"line":123}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"667","location":{"end":{"column":43,"line":128},"start":{"column":13,"line":127}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"669","location":{"end":{"column":43,"line":128},"start":{"column":13,"line":127}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"668","location":{"end":{"column":43,"line":128},"start":{"column":13,"line":127}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"670","location":{"end":{"column":51,"line":127},"start":{"column":13,"line":127}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"671","location":{"end":{"column":51,"line":127},"start":{"column":13,"line":127}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"672","location":{"end":{"column":51,"line":127},"start":{"column":13,"line":127}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"674","location":{"end":{"column":43,"line":128},"start":{"column":12,"line":128}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"673","location":{"end":{"column":51,"line":127},"start":{"column":38,"line":127}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"675","location":{"end":{"column":43,"line":128},"start":{"column":12,"line":128}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"676","location":{"end":{"column":43,"line":128},"start":{"column":12,"line":128}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"677","location":{"end":{"column":43,"line":128},"start":{"column":37,"line":128}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"678","location":{"end":{"column":10,"line":130},"start":{"column":45,"line":128}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"679","location":{"end":{"column":26,"line":131},"start":{"column":19,"line":131}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"681","location":{"end":{"column":80,"line":138},"start":{"column":8,"line":138}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"680","location":{"end":{"column":80,"line":138},"start":{"column":8,"line":138}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"682","location":{"end":{"column":80,"line":138},"start":{"column":8,"line":138}},"mutatorName":"LogicalOperator","replacement":"result !== null || <ResultAlert result={result} setResult={setResult} />","status":"Survived"},{"id":"683","location":{"end":{"column":23,"line":138},"start":{"column":8,"line":138}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"684","location":{"end":{"column":23,"line":138},"start":{"column":8,"line":138}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"686","location":{"end":{"column":129,"line":144},"start":{"column":109,"line":144}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"685","location":{"end":{"column":23,"line":138},"start":{"column":8,"line":138}},"mutatorName":"EqualityOperator","replacement":"result === null","status":"Survived"},{"id":"687","location":{"end":{"column":147,"line":148},"start":{"column":127,"line":148}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"688","location":{"end":{"column":150,"line":166},"start":{"column":130,"line":166}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"689","location":{"end":{"column":126,"line":170},"start":{"column":106,"line":170}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"690","location":{"end":{"column":138,"line":174},"start":{"column":118,"line":174}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"691","location":{"end":{"column":126,"line":178},"start":{"column":106,"line":178}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"692","location":{"end":{"column":12,"line":193},"start":{"column":40,"line":181}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"693","location":{"end":{"column":39,"line":182},"start":{"column":26,"line":182}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"694","location":{"end":{"column":38,"line":184},"start":{"column":25,"line":184}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"695","location":{"end":{"column":65,"line":186},"start":{"column":34,"line":186}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"696","location":{"end":{"column":141,"line":186},"start":{"column":121,"line":186}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport clsx from 'clsx';\nimport {\n  TextField, Button, InputLabel, InputAdornment, IconButton, OutlinedInput, FormControl, makeStyles,\n} from '@material-ui/core';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\nimport './AddCollection.css';\nimport ResultAlert from '../ResultAlert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '40ch',\n  },\n}));\n\nconst AddCollection = ({ loggedInUser }) => {\n  const classes = useStyles();\n  const linkField = { link: '' };\n\n  const [redirect, setRedirect] = useState(false);\n  const [result, setResult] = useState(null);\n  const [formData, setFormData] = useState({\n    author: loggedInUser,\n    title: '',\n    description: '',\n    hidden: false,\n    contributors: '',\n    text: '',\n    category: '',\n    tags: '',\n    links: '',\n  });\n\n  const {\n    author,\n    title,\n    description,\n    hidden,\n    contributors,\n    text,\n    category,\n    tags,\n    links,\n    id,\n  } = formData;\n\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n    setFormData({\n      ...formData,\n      hidden: checked,\n    });\n  };\n\n  // this is for link input fields\n  const [linkInput, setLinkInput] = useState([{ ...linkField }]);\n\n  // Add new link field to form so you can add multiple links\n  const addLinkField = () => {\n    setLinkInput([...linkInput, { ...linkField }]);\n  };\n\n  const updateForm = (e) => {\n    if (e.target.name === 'hidden') {\n      setFormData({\n        ...formData,\n        hidden: !hidden,\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  const addCollection = (e) => {\n    e.preventDefault();\n    const temp = [];\n    Object.keys(formData).forEach((key) => {\n      if (key.indexOf('link') > -1 && key !== 'links') {\n        temp.push(formData[key]);\n        delete formData[key];\n      }\n      formData.links = String(temp);\n    });\n    fetch('/api/collections', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data) {\n          if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n            console.log('AddCollection successful!');\n            console.log('result? ', result);\n          }\n          setResult('success');\n          setTimeout(() => setRedirect(true), 2000);\n        }\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === 'development'\n        || process.env.NODE_ENV === 'test') {\n          console.log(err);\n        }\n        setResult('error');\n      });\n  };\n\n  return (\n    <div>\n      {redirect ? <Redirect to=\"/\" /> : null}\n      {result !== null && <ResultAlert result={result} setResult={setResult} />}\n      <div className=\"addCollection\">\n        <h1>Add New Collection</h1>\n        <form>\n          <br />\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <TextField id=\"outlined-required-title\" name=\"title\" label=\"Title\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n          </FormControl>\n          <br />\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <TextField id=\"outlined-required-description\" name=\"description\" label=\"Description\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n          </FormControl>\n          <br />\n          <FormControl className={clsx(classes.margin)}>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  checked={checked}\n                  onChange={handleChange}\n                  name=\"hidden\"\n                  color=\"primary\"\n                />\n              )}\n              label=\"Hidden\"\n            />\n          </FormControl>\n          <br />\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <TextField id=\"outlined-required-contributors\" name=\"contributors\" label=\"Contributors\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n          </FormControl>\n          <br />\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <TextField id=\"outlined-required-text\" name=\"text\" label=\"Text\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n          </FormControl>\n          <br />\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <TextField id=\"outlined-required-category\" name=\"category\" label=\"Category\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n          </FormControl>\n          <br />\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <TextField id=\"outlined-required-tags\" name=\"tags\" label=\"Tags\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n          </FormControl>\n          <br />\n          {linkInput.map((val, idx) => {\n            const link = `link-${idx}`;\n            return (\n              <div key={`link-${idx}`}>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n                  <TextField id={`outlined-required-link-${idx}`} name={link} label=\"Link\" variant=\"outlined\" onChange={(e) => updateForm(e)} />\n                </FormControl>\n                <IconButton color=\"primary\" id=\"add-link\" aria-label=\"add link\" component=\"span\" className={classes.margin} onClick={addLinkField}>\n                  <AddBoxIcon size=\"small\" />\n                </IconButton>\n              </div>\n            );\n          })}\n          <br />\n          <Button onClick={addCollection} id=\"submit-button\" variant=\"contained\" color=\"primary\">Submit</Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddCollection;\n"},"/Users/steve/learnvault/client/src/components/collections/AllCollections.jsx":{"language":"javascript","mutants":[{"id":"697","location":{"end":{"column":2,"line":60},"start":{"column":63,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"698","location":{"end":{"column":52,"line":8},"start":{"column":50,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"699","location":{"end":{"column":4,"line":38},"start":{"column":19,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"700","location":{"end":{"column":24,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"702","location":{"end":{"column":6,"line":28},"start":{"column":26,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"705","location":{"end":{"column":10,"line":25},"start":{"column":27,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"703","location":{"end":{"column":46,"line":20},"start":{"column":13,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"701","location":{"end":{"column":24,"line":18},"start":{"column":9,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"706","location":{"end":{"column":29,"line":32},"start":{"column":11,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"704","location":{"end":{"column":34,"line":21},"start":{"column":15,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"707","location":{"end":{"column":32,"line":33},"start":{"column":13,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"713","location":{"end":{"column":36,"line":43},"start":{"column":8,"line":43}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"709","location":{"end":{"column":14,"line":38},"start":{"column":6,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"715","location":{"end":{"column":10,"line":54},"start":{"column":25,"line":44}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"712","location":{"end":{"column":36,"line":43},"start":{"column":8,"line":43}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"710","location":{"end":{"column":55,"line":42},"start":{"column":30,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"714","location":{"end":{"column":36,"line":43},"start":{"column":8,"line":43}},"mutatorName":"EqualityOperator","replacement":"collections[0] === undefined","status":"Survived"},{"id":"711","location":{"end":{"column":75,"line":42},"start":{"column":58,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"708","location":{"end":{"column":8,"line":37},"start":{"column":25,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Collection from './Collection';\n\nconst AllCollections = ({ loggedInUser, userCollections }) => {\n  // console.log('Invoked AllCollections', loggedInUser, userCollections);\n  const [collections, setCollections] = useState([]);\n  const { userId } = useParams();\n\n  // console.log('useState collections', collections);\n  // console.log('useParams userId', userId);\n\n  useEffect(() => {\n    // console.log('Invoked useEffect userCollections', userCollections);\n\n    // Check if we are trying to get all collections for a specific user\n    if (userCollections) {\n      // console.log('fetching only collections for user', userId);\n      fetch(`/api/collections/user/${userId}`)\n        .then((res) => res.json())\n        .then((result) => {\n          // console.log(`AllCollections fetch /api/collections/${userId}`, result);\n          setCollections(result);\n        });\n\n      return;\n    }\n\n    // Otherwise just get all collections\n    // console.log('fetching all collections');\n    fetch('/api/collections')\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log('AllCollections fetch /api/collections', result);\n        setCollections(result);\n      });\n  }, [userId]);\n\n  return (\n    <div>\n      <h1>{userCollections ? `${userId}'s Collections` : 'All Collections'}</h1>\n      {collections[0] !== undefined ? (\n        collections.map((collection) => (\n          <Collection\n            key={collection._id}\n            id={collection._id}\n            title={collection.title}\n            description={collection.description}\n            author={collection.author}\n            loggedInUser={loggedInUser}\n            likes={collection.likes}\n          />\n        ))\n      ) : (\n        <li> Loading...</li>\n      )}\n    </div>\n  );\n};\n\nexport default AllCollections;\n"},"/Users/steve/learnvault/client/src/components/collections/EditButton.jsx":{"language":"javascript","mutants":[{"id":"718","location":{"end":{"column":2,"line":21},"start":{"column":26,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"719","location":{"end":{"column":44,"line":9},"start":{"column":18,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"721","location":{"end":{"column":47,"line":10},"start":{"column":21,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"720","location":{"end":{"column":43,"line":9},"start":{"column":36,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"722","location":{"end":{"column":46,"line":10},"start":{"column":39,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React, { useState } from 'react';\n\nimport './EditButton.css';\n\nconst EditButton = () => {\n  return (\n    <>\n      <span\n        onClick={() => console.log('edit!')}\n        onKeyPress={() => console.log('edit!')}\n        type=\"button\"\n        className=\"button-edit\"\n        role=\"button\"\n        tabIndex={0}\n      >\n        <i className=\"far fa-edit\" />\n        Edit\n      </span>\n    </>\n  );\n};\n\nexport default EditButton;\n"},"/Users/steve/learnvault/client/src/components/collections/ExpandedCollection.jsx":{"language":"javascript","mutants":[{"id":"725","location":{"end":{"column":59,"line":14},"start":{"column":57,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"726","location":{"end":{"column":4,"line":31},"start":{"column":19,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"723","location":{"end":{"column":2,"line":84},"start":{"column":50,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"727","location":{"end":{"column":35,"line":22},"start":{"column":11,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"724","location":{"end":{"column":61,"line":14},"start":{"column":48,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"728","location":{"end":{"column":32,"line":23},"start":{"column":13,"line":23}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"729","location":{"end":{"column":8,"line":30},"start":{"column":25,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"730","location":{"end":{"column":45,"line":26},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"732","location":{"end":{"column":45,"line":26},"start":{"column":13,"line":25}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"733","location":{"end":{"column":51,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"731","location":{"end":{"column":45,"line":26},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"735","location":{"end":{"column":51,"line":25},"start":{"column":13,"line":25}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"734","location":{"end":{"column":51,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"737","location":{"end":{"column":45,"line":26},"start":{"column":14,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"738","location":{"end":{"column":45,"line":26},"start":{"column":14,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"736","location":{"end":{"column":51,"line":25},"start":{"column":38,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"739","location":{"end":{"column":45,"line":26},"start":{"column":14,"line":26}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"740","location":{"end":{"column":45,"line":26},"start":{"column":39,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"741","location":{"end":{"column":10,"line":28},"start":{"column":47,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"744","location":{"end":{"column":8,"line":55},"start":{"column":8,"line":44}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"743","location":{"end":{"column":8,"line":55},"start":{"column":8,"line":44}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"746","location":{"end":{"column":12,"line":53},"start":{"column":33,"line":46}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"742","location":{"end":{"column":8,"line":31},"start":{"column":6,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"747","location":{"end":{"column":12,"line":72},"start":{"column":12,"line":66}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"748","location":{"end":{"column":12,"line":72},"start":{"column":12,"line":66}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"745","location":{"end":{"column":8,"line":55},"start":{"column":8,"line":44}},"mutatorName":"LogicalOperator","replacement":"collection.links || <div className=\"links\">\n          {collection.links.map(link => <div className=\"links__item\" key={link}>\n              {\n      /* <a href={link} target=\"_blank\" rel=\"noreferrer\">\n       {link}\n      </a> */\n    }\n              <Link href={link}>{link}</Link>\n            </div>)}\n        </div>","status":"Killed"},{"id":"749","location":{"end":{"column":12,"line":72},"start":{"column":12,"line":66}},"mutatorName":"LogicalOperator","replacement":"loggedInUser === collection.author || <EditButton loggedInUser={loggedInUser} author={collection.author} id={id} />","status":"Killed"},{"id":"750","location":{"end":{"column":46,"line":66},"start":{"column":12,"line":66}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"751","location":{"end":{"column":46,"line":66},"start":{"column":12,"line":66}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"752","location":{"end":{"column":46,"line":66},"start":{"column":12,"line":66}},"mutatorName":"EqualityOperator","replacement":"loggedInUser !== collection.author","status":"Killed"}],"source":"import { Button, Link } from '@material-ui/core';\nimport { withTheme } from '@material-ui/core/styles';\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\n\nimport './ExpandedCollection.css';\n\nimport LikeButton from './LikeButton';\nimport SaveButton from './SaveButton';\nimport EditButton from './EditButton';\n\nconst ExpandedCollection = ({ loggedInUser }) => {\n  // console.log('Invoked ExpandedCollection', loggedInUser);\n  const [collection, setCollection] = useState({ likes: [] });\n  const { id } = useParams();\n\n  // console.log('useState collection', collection);\n  // console.log('useParams id', id);\n\n  useEffect(() => {\n    // console.log('Fetching /api/collections for', id);\n    fetch(`/api/collections/${id}`)\n      .then((res) => res.json())\n      .then((result) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log(result);\n        }\n        setCollection(result);\n      });\n  }, []);\n\n  // console.log('useEffect collection', collection);\n  return (\n    <div className=\"collection-div\">\n      <h1>{collection.title}</h1>\n      <h3>{collection.description}</h3>\n\n      <div className=\"creator\">\n        <div className=\"creator__label\">Creator:</div>\n        <div className=\"creator__author\">{collection.author}</div>\n      </div>\n\n      {collection.links && (\n        <div className=\"links\">\n          {collection.links.map((link) => (\n            <div className=\"links__item\" key={link}>\n              {/* <a href={link} target=\"_blank\" rel=\"noreferrer\">\n                {link}\n              </a> */}\n              <Link href={link}>{link}</Link>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {loggedInUser ? (\n        <div>\n          <br />\n          <LikeButton\n            loggedInUser={loggedInUser}\n            likes={collection.likes}\n            id={id}\n          />\n          <SaveButton loggedInUser={loggedInUser} id={id} />\n          {loggedInUser === collection.author && (\n            <EditButton\n              loggedInUser={loggedInUser}\n              author={collection.author}\n              id={id}\n            />\n          )}\n        </div>\n      ) : (\n        <div>\n          <Link component={RouterLink} to=\"/register\">Register</Link>\n          &nbsp;or&nbsp;\n          <Link component={RouterLink} to=\"/login\">Login</Link>\n          &nbsp;to save this collection\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default withTheme(ExpandedCollection);\n"},"/Users/steve/learnvault/client/src/components/collections/Collection.jsx":{"language":"javascript","mutants":[{"id":"716","location":{"end":{"column":2,"line":43},"start":{"column":20,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"717","location":{"end":{"column":62,"line":23},"start":{"column":42,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport { Button, Link } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport LikeButton from './LikeButton';\nimport SaveButton from './SaveButton';\n\nimport './Collection.css';\n\nconst Collection = ({\n  id, title, description, author, loggedInUser, likes,\n}) => (\n  <div key={id} className=\"collection\">\n    <h1 className=\"collection__title\">{title}</h1>\n    <h3>{description}</h3>\n\n    <div className=\"creator\">\n      <div className=\"creator__label\">Creator:</div>\n      <div className=\"creator__author\">{author}</div>\n    </div>\n    <div>\n      {/* className=\"collection__button\" */}\n      <Button component={RouterLink} to={`/collections/${id}`} variant=\"contained\" color=\"primary\">\n        View Collection\n      </Button>\n    </div>\n    {loggedInUser ? (\n      <div>\n        <br />\n        <LikeButton loggedInUser={loggedInUser} likes={likes} id={id} />\n        <SaveButton loggedInUser={loggedInUser} id={id} />\n      </div>\n    ) : (\n      <div>\n        <br />\n        <Link component={RouterLink} to=\"/register\">Register</Link>\n        &nbsp;or&nbsp;\n        <Link component={RouterLink} to=\"/login\">Login</Link>\n        &nbsp;to save this collection\n      </div>\n    )}\n  </div>\n);\n\nexport default Collection;\n"},"/Users/steve/learnvault/client/src/components/collections/LikeButton.jsx":{"language":"javascript","mutants":[{"id":"755","location":{"end":{"column":53,"line":7},"start":{"column":21,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"754","location":{"end":{"column":4,"line":31},"start":{"column":45,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"756","location":{"end":{"column":40,"line":9},"start":{"column":11,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"757","location":{"end":{"column":6,"line":15},"start":{"column":42,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"758","location":{"end":{"column":20,"line":10},"start":{"column":15,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"759","location":{"end":{"column":8,"line":13},"start":{"column":16,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"761","location":{"end":{"column":43,"line":12},"start":{"column":25,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"762","location":{"end":{"column":42,"line":16},"start":{"column":13,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"760","location":{"end":{"column":23,"line":12},"start":{"column":9,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"753","location":{"end":{"column":2,"line":48},"start":{"column":53,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"763","location":{"end":{"column":8,"line":23},"start":{"column":23,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"764","location":{"end":{"column":45,"line":19},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"766","location":{"end":{"column":45,"line":19},"start":{"column":13,"line":18}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Killed"},{"id":"767","location":{"end":{"column":51,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"765","location":{"end":{"column":45,"line":19},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"769","location":{"end":{"column":51,"line":18},"start":{"column":13,"line":18}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"770","location":{"end":{"column":51,"line":18},"start":{"column":38,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"771","location":{"end":{"column":45,"line":19},"start":{"column":14,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"768","location":{"end":{"column":51,"line":18},"start":{"column":13,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"772","location":{"end":{"column":45,"line":19},"start":{"column":14,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"773","location":{"end":{"column":45,"line":19},"start":{"column":14,"line":19}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Killed"},{"id":"774","location":{"end":{"column":45,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"775","location":{"end":{"column":10,"line":21},"start":{"column":47,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"776","location":{"end":{"column":33,"line":20},"start":{"column":23,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"778","location":{"end":{"column":45,"line":26},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"777","location":{"end":{"column":8,"line":30},"start":{"column":25,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"779","location":{"end":{"column":45,"line":26},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"781","location":{"end":{"column":51,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"782","location":{"end":{"column":51,"line":25},"start":{"column":13,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"783","location":{"end":{"column":51,"line":25},"start":{"column":13,"line":25}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"780","location":{"end":{"column":45,"line":26},"start":{"column":13,"line":25}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Killed"},{"id":"784","location":{"end":{"column":51,"line":25},"start":{"column":38,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"785","location":{"end":{"column":45,"line":26},"start":{"column":14,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"786","location":{"end":{"column":45,"line":26},"start":{"column":14,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"787","location":{"end":{"column":45,"line":26},"start":{"column":14,"line":26}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Killed"},{"id":"788","location":{"end":{"column":45,"line":26},"start":{"column":39,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"790","location":{"end":{"column":33,"line":27},"start":{"column":25,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"789","location":{"end":{"column":10,"line":28},"start":{"column":47,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"791","location":{"end":{"column":64,"line":36},"start":{"column":18,"line":36}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"792","location":{"end":{"column":67,"line":37},"start":{"column":21,"line":37}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { useState } from 'react';\n\nimport './LikeButton.css';\n\nconst LikeButton = ({ id, loggedInUser, likes }) => {\n  function likeButtonClick(eventId, userId) {\n    const payload = { id: userId, collectionId: id };\n\n    fetch(`/api/collections/like/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log('Success:', data);\n        }\n        return data;\n      })\n      .catch((error) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.error('Error:', error);\n        }\n        // throw error\n      });\n  }\n\n  return (\n    <>\n      <span\n        onClick={() => likeButtonClick(id, loggedInUser, likes)}\n        onKeyPress={() => likeButtonClick(id, loggedInUser, likes)}\n        type=\"button\"\n        className=\"button-like\"\n        role=\"button\"\n        tabIndex={0}\n      >\n        <i className=\"far fa-thumbs-up\" />\n        <small> {likes.length}</small>\n      </span>\n    </>\n  );\n};\n\nexport default LikeButton;\n"},"/Users/steve/learnvault/client/src/components/collections/SaveButton.jsx":{"language":"javascript","mutants":[{"id":"794","location":{"end":{"column":4,"line":28},"start":{"column":45,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"793","location":{"end":{"column":2,"line":43},"start":{"column":46,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"796","location":{"end":{"column":40,"line":7},"start":{"column":11,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"797","location":{"end":{"column":6,"line":13},"start":{"column":42,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"795","location":{"end":{"column":53,"line":5},"start":{"column":21,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"798","location":{"end":{"column":20,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"799","location":{"end":{"column":8,"line":11},"start":{"column":16,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"800","location":{"end":{"column":23,"line":10},"start":{"column":9,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"803","location":{"end":{"column":8,"line":21},"start":{"column":23,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"804","location":{"end":{"column":45,"line":17},"start":{"column":13,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"801","location":{"end":{"column":43,"line":10},"start":{"column":25,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"802","location":{"end":{"column":42,"line":14},"start":{"column":13,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"805","location":{"end":{"column":45,"line":17},"start":{"column":13,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"808","location":{"end":{"column":51,"line":16},"start":{"column":13,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"807","location":{"end":{"column":51,"line":16},"start":{"column":13,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"809","location":{"end":{"column":51,"line":16},"start":{"column":13,"line":16}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"810","location":{"end":{"column":51,"line":16},"start":{"column":38,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"811","location":{"end":{"column":45,"line":17},"start":{"column":14,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"806","location":{"end":{"column":45,"line":17},"start":{"column":13,"line":16}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Killed"},{"id":"812","location":{"end":{"column":45,"line":17},"start":{"column":14,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"813","location":{"end":{"column":45,"line":17},"start":{"column":14,"line":17}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Killed"},{"id":"814","location":{"end":{"column":45,"line":17},"start":{"column":39,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"817","location":{"end":{"column":8,"line":27},"start":{"column":25,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"815","location":{"end":{"column":10,"line":19},"start":{"column":47,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"816","location":{"end":{"column":33,"line":18},"start":{"column":23,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"818","location":{"end":{"column":45,"line":24},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"819","location":{"end":{"column":45,"line":24},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"820","location":{"end":{"column":45,"line":24},"start":{"column":13,"line":23}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Killed"},{"id":"821","location":{"end":{"column":51,"line":23},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"822","location":{"end":{"column":51,"line":23},"start":{"column":13,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"823","location":{"end":{"column":51,"line":23},"start":{"column":13,"line":23}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"824","location":{"end":{"column":51,"line":23},"start":{"column":38,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"825","location":{"end":{"column":45,"line":24},"start":{"column":14,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"827","location":{"end":{"column":45,"line":24},"start":{"column":14,"line":24}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Killed"},{"id":"828","location":{"end":{"column":45,"line":24},"start":{"column":39,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"831","location":{"end":{"column":55,"line":32},"start":{"column":16,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"829","location":{"end":{"column":10,"line":26},"start":{"column":47,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"830","location":{"end":{"column":33,"line":25},"start":{"column":25,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"832","location":{"end":{"column":58,"line":33},"start":{"column":19,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"826","location":{"end":{"column":45,"line":24},"start":{"column":14,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"}],"source":"import React from 'react';\n\nconst SaveButton = ({ id, loggedInUser }) => {\n  function likeButtonClick(eventId, userId) {\n    const payload = { id: userId, collectionId: id };\n\n    fetch(`/api/collections/save/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.log('Success:', data);\n        }\n        return data;\n      })\n      .catch((error) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.error('Error:', error);\n        }\n      });\n  }\n\n  return (\n    <span\n      onClick={() => likeButtonClick(id, loggedInUser)}\n      onKeyPress={() => likeButtonClick(id, loggedInUser)}\n      role=\"button\"\n      tabIndex={0}\n      type=\"button\"\n      className=\"button-like\"\n    >\n      <i className=\"far fa-star\" />\n    &nbsp; Save Collection\n    </span>\n  );\n};\n\nexport default SaveButton;\n"},"/Users/steve/learnvault/client/src/components/collections/SavedCollections.jsx":{"language":"javascript","mutants":[{"id":"833","location":{"end":{"column":2,"line":65},"start":{"column":48,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"834","location":{"end":{"column":52,"line":7},"start":{"column":50,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"835","location":{"end":{"column":32,"line":8},"start":{"column":30,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"836","location":{"end":{"column":4,"line":42},"start":{"column":19,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"837","location":{"end":{"column":62,"line":15},"start":{"column":11,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"838","location":{"end":{"column":6,"line":20},"start":{"column":64,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"839","location":{"end":{"column":20,"line":16},"start":{"column":15,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"840","location":{"end":{"column":8,"line":19},"start":{"column":16,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"841","location":{"end":{"column":23,"line":18},"start":{"column":9,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"842","location":{"end":{"column":43,"line":18},"start":{"column":25,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"843","location":{"end":{"column":42,"line":21},"start":{"column":13,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"844","location":{"end":{"column":8,"line":34},"start":{"column":23,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"846","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"845","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"849","location":{"end":{"column":10,"line":33},"start":{"column":30,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"847","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"EqualityOperator","replacement":"data.length >= 0","status":"Survived"},{"id":"848","location":{"end":{"column":28,"line":24},"start":{"column":13,"line":24}},"mutatorName":"EqualityOperator","replacement":"data.length <= 0","status":"Killed"},{"id":"850","location":{"end":{"column":15,"line":32},"start":{"column":20,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"851","location":{"end":{"column":58,"line":25},"start":{"column":34,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"852","location":{"end":{"column":38,"line":26},"start":{"column":19,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"853","location":{"end":{"column":14,"line":30},"start":{"column":31,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"854","location":{"end":{"column":14,"line":32},"start":{"column":27,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"855","location":{"end":{"column":53,"line":31},"start":{"column":30,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"856","location":{"end":{"column":8,"line":41},"start":{"column":25,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"859","location":{"end":{"column":45,"line":37},"start":{"column":13,"line":36}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'development' && process.env.NODE_ENV === 'test'","status":"Survived"},{"id":"860","location":{"end":{"column":51,"line":36},"start":{"column":13,"line":36}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"857","location":{"end":{"column":45,"line":37},"start":{"column":13,"line":36}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"858","location":{"end":{"column":45,"line":37},"start":{"column":13,"line":36}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"861","location":{"end":{"column":51,"line":36},"start":{"column":13,"line":36}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"862","location":{"end":{"column":51,"line":36},"start":{"column":13,"line":36}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'development'","status":"Survived"},{"id":"863","location":{"end":{"column":51,"line":36},"start":{"column":38,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"864","location":{"end":{"column":45,"line":37},"start":{"column":14,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"865","location":{"end":{"column":45,"line":37},"start":{"column":14,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"866","location":{"end":{"column":45,"line":37},"start":{"column":14,"line":37}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'test'","status":"Survived"},{"id":"874","location":{"end":{"column":12,"line":62},"start":{"column":27,"line":52}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"868","location":{"end":{"column":10,"line":39},"start":{"column":47,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"869","location":{"end":{"column":33,"line":38},"start":{"column":25,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"870","location":{"end":{"column":8,"line":42},"start":{"column":6,"line":42}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"867","location":{"end":{"column":45,"line":37},"start":{"column":39,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"871","location":{"end":{"column":36,"line":50},"start":{"column":8,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"872","location":{"end":{"column":36,"line":50},"start":{"column":8,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"873","location":{"end":{"column":36,"line":50},"start":{"column":8,"line":50}},"mutatorName":"EqualityOperator","replacement":"collections[0] === undefined","status":"Killed"}],"source":"import React, { useState, useEffect } from 'react';\n\nimport Collection from './Collection';\n\nconst SavedCollections = ({ loggedInUser }) => {\n  // console.log('Invoked SavedCollections', loggedInUser);\n  const [collections, setCollections] = useState([]);\n  const currentCollections = [];\n\n  // console.log('useState collections', collections);\n\n  useEffect(() => {\n    // Get all collections for user\n    // console.log('fetching savedcollections', loggedInUser);\n    fetch(`/api/collections/savedcollections/${loggedInUser}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log('fetch savedcollectiond data', data);\n        if (data.length > 0) {\n          data.map((id) => fetch(`/api/collections/${id}`)\n            .then((res) => res.json())\n            .then((result) => {\n              // console.log('pushing currentCollection', result);\n              currentCollections.push(result);\n            }).then(() => {\n              setCollections([...currentCollections]);\n            }));\n        }\n      })\n      .catch((error) => {\n        if (process.env.NODE_ENV === 'development'\n          || process.env.NODE_ENV === 'test') {\n          console.error('Error:', error);\n        }\n        // throw error\n      });\n  }, []);\n\n  // console.log('currentCollections', currentCollections);\n  // console.log('useEffect collections', collections);\n\n  return (\n    <div>\n      <h1>Saved Collections</h1>\n      {collections[0] !== undefined\n        ? (\n          collections.map((collection) => (\n            <Collection\n              key={collection._id}\n              id={collection._id}\n              title={collection.title}\n              description={collection.description}\n              author={collection.author}\n              loggedInUser={loggedInUser}\n              likes={collection.likes}\n            />\n          ))) : <li> Loading...</li>}\n    </div>\n  );\n};\n\nexport default SavedCollections;\n"},"/Users/steve/learnvault/client/src/index.jsx":{"language":"javascript","mutants":[{"id":"875","location":{"end":{"column":46,"line":5},"start":{"column":40,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.querySelector('#app'));\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};